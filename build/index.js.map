{
  "version": 3,
  "sources": ["../app/entry.server.tsx", "../app/root.tsx", "../app/components/navigation.tsx", "../app/auth/auth.server.ts", "../app/auth/session.server.ts", "../app/services/auth.server.ts", "../app/routes/documentacioninterna.tsx", "../app/services/internaldocuments.server.ts", "../app/components/modalMessage.tsx", "../app/components/close_button.tsx", "../app/components/internaldocument.tsx", "../app/components/modalDocument.tsx", "../app/components/formInternalDocument.tsx", "../app/routes/clientes._index.tsx", "../app/components/formClient.tsx", "../app/components/spinner.tsx", "../app/components/input.tsx", "../app/components/client.tsx", "../app/services/client.server.ts", "../app/services/document.server.ts", "../app/routes/forgot-password.tsx", "../app/services/user.server.ts", "../app/components/forgot-password/enter-email.tsx", "../app/components/forgot-password/enter-code.tsx", "../app/components/forgot-password/restore-password.tsx", "../app/utils/helpers.ts", "../app/services/email.server.ts", "../app/routes/materias._index.tsx", "../app/components/formSubject.tsx", "../app/components/subject.tsx", "../app/services/subject.server.ts", "../app/routes/usuarios._index.tsx", "../app/components/user.tsx", "../app/components/modalCodeMessage.tsx", "../app/components/dropdownlist.tsx", "../app/components/modalCodeShow.tsx", "../app/routes/create-account.tsx", "../app/components/create-account/enter-code.tsx", "../app/components/create-account/enter-email.tsx", "../app/components/create-account/enter-password.tsx", "../app/routes/materias.$name.tsx", "../app/components/document.tsx", "../app/routes/clientes.$URL.tsx", "../app/components/selectDocument.tsx", "../app/components/selectSubject.tsx", "../app/components/formDocument.tsx", "../app/routes/usuarios.$URL.tsx", "../app/components/select-item.tsx", "../app/components/select.tsx", "../app/routes/citas._index.tsx", "../app/services/date.server.ts", "../app/components/formDate.tsx", "../app/components/date.tsx", "../app/routes/nosotros.tsx", "../app/components/logo.tsx", "../app/routes/_index.tsx", "../app/routes/login.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  // This is ignored so we can keep it in the template for visibility.  Feel\n  // free to delete this parameter in your app if you're not using it!\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  loadContext: AppLoadContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import Navigation from \"~/components/navigation\";\nimport stylesNormalize from \"~/styles/normalize.css\";\nimport stylesGlobal from \"~/styles/global.css\";\nimport textLayer from 'react-pdf/dist/esm/Page/TextLayer.css';\nimport annotationLayer from 'react-pdf/dist/esm/Page/AnnotationLayer.css';\n\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  isRouteErrorResponse,\n  useRouteError, useLoaderData, useLocation } from\n\"@remix-run/react\";\nimport { authenticator } from \"./auth/auth.server\";\n\nexport function meta() {\n  return (\n    [\n    {\n      title: 'Inicio'\n    },\n    {\n      property: 'charset',\n      content: 'utf-8'\n    },\n    {\n      property: 'viewport',\n      content: 'width=device-widht, initial-scale=1'\n    }]);\n\n\n}\n\nexport const links = () => [\n{\n  rel: 'stylesheet',\n  href: stylesNormalize\n},\n{\n  rel: 'stylesheet',\n  href: stylesGlobal\n},\n{\n  rel: 'stylesheet',\n  href: textLayer\n},\n{\n  rel: 'stylesheet',\n  href: annotationLayer\n},\n{\n  rel: 'preconnect',\n  href: 'https://fonts.googleapis.com'\n},\n{\n  rel: 'preconnect',\n  href: 'https://fonts.gstatic.com',\n  crossOrigin: \"true\"\n},\n{\n  rel: 'stylesheet',\n  href: 'https://fonts.googleapis.com/css2?family=Montserrat:wght@100;300;400;700;900&display=swap'\n}];\n\n\n\nexport async function loader({ request }: any) {\n  const user = await authenticator.isAuthenticated(request);\n\n  return {\n    USER: user /*{\n    Name: 'Admin',\n    Email: 'admin@gmail.com'\n    }*/,\n    ENV: {\n      URL_API: process.env.API_URL\n    }\n  };\n}\n\nexport async function action({ request }: any) {\n  return await authenticator.logout(request, {\n    redirectTo: 'login'\n  });\n}\n\n\n\nexport default function App() {\n  const loader: any = useLoaderData();\n  return (\n    <Document user={loader?.USER}>\n        <Outlet context={\n      {\n        URL_API: loader?.ENV.URL_API\n      }} />\n\n    </Document>);\n\n}\n\nfunction Document({ children, user }: any) {\n  const { pathname } = useLocation();\n  return (\n    <html lang=\"es\">\n      <head>\n        <Meta />\n        <Links />\n        <title></title>\n      </head>\n\n      <body>\n      {pathname === '/login' ||\n        pathname === '/create-account' ||\n        pathname === '/forgot-password' ?\n        <></> :\n        <Navigation user={user} />}\n\n        {children}\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}\n\nexport function ErrorBoundary() {\n  const error = useRouteError();\n\n  if (isRouteErrorResponse(error)) {\n    return (\n      <Document>\n        <div className=\"container\">\n          <h1 className=\"heading\">Error</h1>\n          <p className=\"subheading\">Error: 404 pagina no encontrado</p>\n        </div>\n      </Document>);\n\n  } else if (error instanceof Error) {\n    return (\n      <Document>\n        <div className=\"error-page\">\n          <h1 className=\"title\">Ups... Ha ocurrido un error</h1>\n          <img className='image' src=\"/img/info-octagon.svg\" alt=\"error\" />\n          <p className=\"information\">Error: {error.message}</p>\n        </div>\n      </Document>);\n\n  } else {\n    return <h1>Unknown Error</h1>;\n  }\n}", "import { useState } from \"react\";\r\nimport {Form, Link, useLocation} from \"@remix-run/react\";\r\n\r\nexport default function Navigation ({ user }: any){\r\n  const { pathname } = useLocation()\r\n  const [showList, setShowList] = useState(false);\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"bar\">\r\n        <Link to='/'>\r\n          <img src='/img/logo-only.png' alt='logo' className='logo'/>\r\n        </Link>\r\n\r\n        <nav className=\"nav\">\r\n          <Link\r\n            className={`link ${pathname === '/' ? 'active' : ''}`}\r\n            to=\"/\" >\r\n            Inicio\r\n          </Link>\r\n\r\n          <Link\r\n            className={`link ${pathname.includes('/clientes') ? 'active' : ''}`}\r\n            to=\"/clientes\" >\r\n            Clientes\r\n          </Link>\r\n\r\n          { user?.AccessLevel === 'A' || user?.AccessLevel === 'R'\r\n            ?\r\n            <Link\r\n              className={`link ${pathname.includes('/usuarios') ? 'active' : ''}`}\r\n              to=\"/usuarios\" >\r\n              Usuarios\r\n            </Link>\r\n            :\r\n            null\r\n          }\r\n\r\n          <Link\r\n            className={`link ${pathname.includes('/citas') ? 'active' : ''}`}\r\n            to=\"/citas\" >\r\n            Citas\r\n          </Link>\r\n\r\n          <Link\r\n            className={`link ${pathname.includes('/materias') ? 'active' : ''}`}\r\n            to=\"/materias\" >\r\n            Materias\r\n          </Link>\r\n\r\n          <Link\r\n            className={`link ${pathname === '/documentacioninterna' ? 'active' : ''}`}\r\n            to=\"/documentacioninterna\">\r\n            Documentaci\u00F3n interna\r\n          </Link>\r\n\r\n          <div>\r\n            <img src=\"/img/user-circle.svg\" alt=\"user\" className='user' onClick={ () => { setShowList(!showList) } }/>\r\n            { showList &&\r\n              <div className='dropdownlist'>\r\n                <div className='info'>\r\n                  <p className='username'>{ user?.Name }</p>\r\n                  <p className='email'>{ user?.Email }</p>\r\n                </div>\r\n\r\n                <Form className='logout' method='post' action='/'>\r\n                  <button className='button' type='submit'>\r\n                    <img src=\"/img/logout.svg\" alt=\"logout\"/>\r\n                    <p>Cerrar sesi\u00F3n</p>\r\n                  </button>\r\n                </Form>\r\n              </div>\r\n            }\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n", "import {Authenticator, AuthorizationError} from \"remix-auth\";\r\nimport {FormStrategy} from \"remix-auth-form\";\r\nimport {sessionStorage} from './session.server';\r\nimport {login} from '../services/auth.server';\r\n\r\nexport let authenticator = new Authenticator(sessionStorage, {\r\n  throwOnError: true,\r\n  sessionErrorKey: 'sessionErrorKey'\r\n});\r\n\r\nauthenticator.use(\r\n  new FormStrategy(async ({ form }) => {\r\n    let email: any = form.get(\"email\");\r\n    let password: any = form.get(\"password\");\r\n\r\n    if(email.length === 0){\r\n      throw new AuthorizationError('El email es obligatorio')\r\n    }\r\n\r\n    if(password.length === 0){\r\n      throw new AuthorizationError('La contrase\u00F1a es obligatorio')\r\n    }\r\n\r\n    const response = await login(email, password);\r\n    switch ( response?.Result ){\r\n      case -2:\r\n        throw  new AuthorizationError('El correo electr\u00F3nico no fue encontrado')\r\n      case -1:\r\n        throw  new AuthorizationError('La contrase\u00F1a ingresada es incorrecta')\r\n      case 0:\r\n        throw new AuthorizationError('El usuario ingresado se encuentra inhabilitado')\r\n      case 1:\r\n        return response?.User\r\n      default:\r\n        throw new AuthorizationError('La respuesta obtenida del servidor no es valida`')\r\n    }\r\n  }),\r\n  \"user-pass\"\r\n);\r\n", "import { createCookieSessionStorage } from \"@remix-run/node\";\r\n\r\nexport let sessionStorage = createCookieSessionStorage({\r\n  cookie: {\r\n    name: \"_session\",\r\n    sameSite: \"none\",\r\n    path: \"/\",\r\n    httpOnly: true,\r\n    secure: true,\r\n    secrets: [\"s3cr3t\"],\r\n    //secure: process.env.NODE_ENV === \"production\",\r\n  },\r\n});\r\n\r\nexport let { getSession, commitSession, destroySession } = sessionStorage;\r\n", "export async function login( username: string, password: string ){\r\n  const body = {\r\n    Email_Name: username,\r\n    Password: password\r\n  }\r\n\r\n  const response = await fetch(`${process.env.API_URL}/auth`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(body)\r\n  });\r\n\r\n  return await response.json();\r\n}\r\n", "import {useState, useEffect} from \"react\";\r\nimport {useActionData, useLoaderData} from \"@remix-run/react\";\r\n\r\nimport {getInternalDocuments, addInternalDocument, deleteInternalDocument} from \"../services/internaldocuments.server\";\r\n\r\nimport ModalMessage from \"../components/modalMessage\";\r\nimport InternalDocument from \"../components/internaldocument\";\r\nimport FormInternalDocument from \"../components/formInternalDocument\";\r\nimport {authenticator} from \"../auth/auth.server\";\r\n\r\nexport async function loader({ request }: any){\r\n  await authenticator.isAuthenticated(request, {\r\n    failureRedirect: \"/login\",\r\n  });\r\n\r\n  return await getInternalDocuments();\r\n}\r\n\r\nexport async function action({ request }: any){\r\n  const form = await request.formData();\r\n  const InternalDocumentID = form.get('InternalDocumentID');\r\n  const name = form.get('Name');\r\n  const file = form.get('File');\r\n  const internalFiles = await getInternalDocuments();\r\n\r\n  const errors: any = {}\r\n  if(request.method === 'POST'){\r\n    //Name validation\r\n    if(name.length === 0){\r\n      errors.name = 'El titulo del documento es obligatorio';\r\n    }\r\n    if(name.length > 80){\r\n      errors.name = 'El titulo del documento no puede exceder las 80 letras';\r\n    }\r\n    const coincidentNames = internalFiles.filter( (internalFile: { Name: string; }) => internalFile.Name.toLowerCase() === name.toLowerCase() );\r\n    if(coincidentNames.length > 0) {\r\n      errors.name = 'Ya existe un documento registrado con el nombre descrito'\r\n    }\r\n\r\n    //File validation\r\n    if(!file){\r\n      errors.file = 'Debe seleccionar un documento';\r\n    }\r\n  }\r\n\r\n  if(Object.keys(errors).length > 0){\r\n    return {\r\n      status: 'ERROR',\r\n      data: null,\r\n      errors: errors\r\n    }\r\n  }\r\n\r\n  switch (request.method){\r\n    case 'POST':\r\n      const internalDocumentResult = await addInternalDocument(form)\r\n      return {\r\n        status: 'INSERTED',\r\n        data: internalDocumentResult,\r\n        errors: {}\r\n      }\r\n    case 'DELETE':\r\n      const resultDeleted = await deleteInternalDocument(InternalDocumentID);\r\n      return {\r\n        status: 'DELETED',\r\n        data: resultDeleted,\r\n        errors: {}\r\n      }\r\n  }\r\n}\r\n\r\nexport default function Documentacioninterna (){\r\n  const [internalDocuments, setInternalDocuments] = useState([]);\r\n  const [selectedDocument, setSelectedDocument]: any = useState({ algo: 1});\r\n\r\n  const [showInsertedMessage, setShowInsertedMessage] = useState(false)\r\n  const [showDeletedMessage, setShowDeletedMessage] = useState(false)\r\n  const [showFormDeletedMessage, setShowFormDeletedMessage] = useState(false);\r\n  const [showFormInternalDocument, setShowFormInternalDocument] = useState(false)\r\n\r\n  const loader: any = useLoaderData()\r\n  const actionResult: any = useActionData()\r\n\r\n  useEffect(() => {\r\n    switch (actionResult?.status){\r\n      case 'INSERTED':\r\n        setShowFormInternalDocument(false);\r\n        setShowInsertedMessage(true)\r\n        break;\r\n      case 'DELETED':\r\n        setShowFormDeletedMessage(false);\r\n        setShowDeletedMessage(true)\r\n        break;\r\n    }\r\n  }, [actionResult]);\r\n\r\n\r\n  useEffect(() => {\r\n    setInternalDocuments(loader)\r\n  }, [loader]);\r\n\r\n  const searchInternalDocument = (event: any) => {\r\n    const value = event.target.value.toString().toLowerCase()\r\n    const actualizedInternalDocuments = loader?.filter( (client: { Name: string; }) => client.Name.toLowerCase().includes(value) );\r\n    setInternalDocuments( actualizedInternalDocuments );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      { showFormInternalDocument &&\r\n        <FormInternalDocument\r\n          method={'POST'}\r\n          errors={actionResult?.errors}\r\n          setShowModalInternalDocument={ setShowFormInternalDocument }\r\n        />\r\n      }\r\n\r\n      { showFormDeletedMessage &&\r\n        <ModalMessage\r\n          features={\r\n            {\r\n              text: \"\u00BFEsta seguro de la eliminaci\u00F3n del documento?\",\r\n              isOkCancel: true,\r\n              indexIcon: 1,\r\n              data: {\r\n                name: 'InternalDocumentID',\r\n                value: selectedDocument?.InternalDocumentID\r\n              }\r\n            }\r\n          }\r\n          setVisibleMessage={ setShowFormDeletedMessage }\r\n        />\r\n      }\r\n\r\n      { showInsertedMessage &&\r\n        <ModalMessage\r\n          features={\r\n            {\r\n              text: \"El documento ha sido agregado exitosamente\",\r\n              isOkCancel: false,\r\n              indexIcon: 2,\r\n              data: null\r\n            }\r\n          }\r\n          setVisibleMessage={ setShowInsertedMessage }\r\n        />\r\n      }\r\n\r\n      { showDeletedMessage &&\r\n        <ModalMessage\r\n          features={\r\n            {\r\n              text: \"El documento ha sido eliminado exitosamente\",\r\n              isOkCancel: false,\r\n              indexIcon: 2,\r\n              data: null\r\n            }\r\n          }\r\n          setVisibleMessage={ setShowDeletedMessage }\r\n        />\r\n      }\r\n\r\n      <h1 className=\"heading\">Documentaci\u00F3n interna</h1>\r\n      <h2 className=\"subheading\">Gestiona toda la documentacion interna del buffete</h2>\r\n\r\n      <div className='top-options'>\r\n        <div className=\"search\">\r\n          <img src=\"/img/search.svg\" alt=\"search\"/>\r\n          <input\r\n            onChange={ (event) => { searchInternalDocument(event) }}\r\n            type=\"text\"\r\n            placeholder=\"Buscar\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='actions'>\r\n        <button\r\n          className=\"button\"\r\n          onClick={ ()=>{ setShowFormInternalDocument(true) } }\r\n          type=\"button\"\r\n        >\r\n          <img src=\"/img/add.svg\" alt=\"add\"/>\r\n          <p>Agregar nuevo documento</p>\r\n        </button>\r\n      </div>\r\n\r\n      <div className='list-scroll'>\r\n        {\r\n          internalDocuments.map( (internalDocument: any) =>\r\n            <InternalDocument\r\n              key={internalDocument?.InternalDocumentID}\r\n              InternalDocument={internalDocument}\r\n              setSelectedDocument={setSelectedDocument}\r\n              setShowFormDeletedMessage={setShowFormDeletedMessage}\r\n            />\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n", "export async function getInternalDocuments(){\r\n  const result = await fetch(`${process.env.API_URL}/internal-documents`);\r\n  return await result.json();\r\n}\r\n\r\nexport async function getInternalDocumentByID(InternalDocumentID: string){\r\n  const result = await fetch(`${process.env.API_URL}/internal-documents/${InternalDocumentID}`)\r\n  return await result.json();\r\n}\r\n\r\nexport async function addInternalDocument(internalDocumentFormData: any){\r\n  const result = await fetch(`${process.env.API_URL}/internal-documents`, {\r\n    method: 'POST',\r\n    body: internalDocumentFormData\r\n  })\r\n  return await result.json();\r\n}\r\n\r\nexport async function deleteInternalDocument(InternalDocumentID: any){\r\n  const result = await fetch(`${process.env.API_URL}/internal-documents/${InternalDocumentID}`, {\r\n    method: 'DELETE'\r\n  });\r\n  return await result.json();\r\n}\r\n\r\n", "import { Form } from \"@remix-run/react\";\r\nimport CloseButton from \"./close_button\";\r\n\r\nexport default function ModalMessage ({ features, setVisibleMessage }: any){\r\n\r\n  const { text, indexIcon, isOkCancel, data } = features\r\n\r\n  const icon: any = {\r\n    0 : \"alert-triangle.svg\",\r\n    1 : \"alert-circle.svg\",\r\n    2 : \"progress-check.svg\",\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"message\">\r\n        <CloseButton\r\n          setVisibleForm={ setVisibleMessage }\r\n        />\r\n\r\n        <div className=\"message-information\">\r\n          <img src={`/img/${icon[indexIcon]}`} alt=\"reference\"/>\r\n          <p>{text}</p>\r\n          <div className=\"buttons\">\r\n            { isOkCancel ?\r\n              <>\r\n                <Form method={ !data?.method ? 'DELETE' : data.method }>\r\n                  <input name={ data?.name } type=\"hidden\" value={ data?.value }/>\r\n                  <input\r\n                    className=\"button\"\r\n                    type=\"submit\"\r\n                    value=\"Aceptar\"\r\n                  />\r\n                </Form>\r\n\r\n                <input\r\n                  className=\"button\"\r\n                  type=\"button\"\r\n                  onClick={ () => { setVisibleMessage(false) } }\r\n                  value=\"Cancelar\"\r\n                />\r\n              </>\r\n              :\r\n              <input\r\n                className=\"button\"\r\n                type=\"button\"\r\n                onClick={ () => { setVisibleMessage(false) } }\r\n                value=\"Aceptar\"\r\n              />\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n", "export default function CloseButton ({ setVisibleForm }: any){\r\n  return (\r\n    <img\r\n      src=\"/img/x.svg\"\r\n      className=\"button-close\"\r\n      alt=\"close\"\r\n      onClick={\r\n        ()=> {\r\n          setVisibleForm(false)\r\n        }\r\n      }\r\n    />\r\n  )\r\n}\r\n", "import { useState } from \"react\";\r\nimport {Link, useOutletContext} from \"@remix-run/react\";\r\n\r\nimport ModalDocument from \"./modalDocument\";\r\n\r\nexport default function InternalDocument ({ InternalDocument, setSelectedDocument, setShowFormDeletedMessage }: any){\r\n  const { Name, URL } = InternalDocument\r\n  const [showModalDocument, setShowModalDocument] = useState(false);\r\n  const context: any = useOutletContext();\r\n\r\n  return (\r\n    <>\r\n      { showModalDocument &&\r\n        <ModalDocument\r\n          URL={URL}\r\n          isInternalDocument={true}\r\n          setShowModalDocument={setShowModalDocument}\r\n        />\r\n      }\r\n\r\n      <div className='item-list'>\r\n        <div className=\"item-main\">\r\n          <img src=\"/img/file-description.svg\" alt=\"file\"/>\r\n          <div className='item-information' onClick={() => { setShowModalDocument(true) }}>\r\n            <h4>{Name}</h4>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='actions'>\r\n          <Link to={`${context.URL_API}/internaldocument/download/${URL}`}>\r\n            <img\r\n              src='/img/download.svg'\r\n              alt=\"download\"\r\n            />\r\n          </Link>\r\n          <img\r\n            onClick={ () => {\r\n                setSelectedDocument(InternalDocument)\r\n                setShowFormDeletedMessage(true)\r\n              }\r\n            }\r\n            src=\"/img/trash.svg\"\r\n            alt=\"trash\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n", "import {Document, Page, pdfjs} from \"react-pdf\";\r\nimport {useState} from \"react\";\r\nimport {useOutletContext} from \"@remix-run/react\";\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nexport default function ModalDocument ({ URL, setShowModalDocument, isInternalDocument = false }: any){\r\n    const [numPages, setNumPages] = useState(0);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n    const onDocumentLoadSuccess = ({ numPages }: { numPages: number }) => {\r\n        setNumPages(numPages);\r\n    };\r\n\r\n    const reduce = () => {\r\n      if(pageNumber !== 1){\r\n        setPageNumber(pageNumber - 1)\r\n      }\r\n    }\r\n\r\n    const add = () => {\r\n      if(pageNumber !== numPages){\r\n        setPageNumber(pageNumber + 1)\r\n      }\r\n    }\r\n\r\n    const context: any = useOutletContext();\r\n\r\n    return (\r\n      <div className='modal'>\r\n        <div className='document'>\r\n          <img\r\n            src=\"/img/x.svg\"\r\n            className=\"button-close\"\r\n            alt=\"close\"\r\n            onClick={\r\n              ()=> {\r\n                setShowModalDocument(false)\r\n              }\r\n            }\r\n          />\r\n          <Document\r\n            file={`${context.URL_API}/${ isInternalDocument ? 'internal-documents' : 'documents' }/download/${URL}`}\r\n            onLoadError={console.error}\r\n            onLoadSuccess={onDocumentLoadSuccess}\r\n            className='file'\r\n          >\r\n            <Page pageNumber={pageNumber}/>\r\n          </Document>\r\n          <div className='changerpage'>\r\n            <img src=\"/img/arror-left.svg\" alt=\"left\" onClick={ reduce }/>\r\n            <p>{pageNumber} / {numPages}</p>\r\n            <img src=\"/img/arrow-right.svg\" alt=\"right\" onClick={ add }/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n", "import {Form, useNavigation} from \"@remix-run/react\";\r\n\r\nexport default function FormInternalDocument ({ method, errors = {}, setShowModalInternalDocument }: any){\r\n    const navigation = useNavigation();\r\n\r\n    return (\r\n      <div className=\"modal\">\r\n        <Form className=\"form\" method={ method } encType=\"multipart/form-data\">\r\n          <img\r\n            src=\"/img/x.svg\"\r\n            className=\"button-close\"\r\n            alt=\"x\"\r\n            onClick={\r\n              ()=> {\r\n                setShowModalInternalDocument(false)\r\n              }\r\n            }\r\n          />\r\n\r\n          <h1 className=\"heading\">Agregar nuevo documento</h1>\r\n          <h2 className=\"subheading\">Agrega toda la informaci\u00F3n sobre el documento para agregarlo al expediente</h2><br/>\r\n\r\n          <div className=\"inputs\">\r\n              <input type=\"hidden\" name='User' value={2}/>\r\n\r\n            <div className=\"input\">\r\n              <label htmlFor=\"title\">Titulo</label>\r\n              <input\r\n                name='Name'\r\n                id='title'\r\n                type=\"text\"\r\n                placeholder='Escriba el titulo del documento...'\r\n              />\r\n              { errors?.name ? <p className=\"error\">{errors.name}</p> : null }\r\n            </div>\r\n\r\n            <div className=\"input\">\r\n              <label htmlFor=\"file\">Archivo</label>\r\n              <input\r\n                type=\"file\"\r\n                name=\"File\"\r\n                id=\"file\"\r\n              />\r\n              { errors?.file ? <p className=\"error\">{errors.file}</p> : null }\r\n            </div>\r\n          </div>\r\n\r\n          <div className='loading'>\r\n            <input className=\"button\" type=\"submit\" value='Guardar'/>\r\n            { navigation?.state !== 'idle' &&\r\n              <div className=\"spinner\">\r\n                <div className=\"bounce1\"></div>\r\n                <div className=\"bounce2\"></div>\r\n                <div className=\"bounce3\"></div>\r\n              </div>\r\n            }\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    )\r\n}\r\n", "import { useEffect, useState } from \"react\";\nimport { useActionData, useLoaderData } from \"@remix-run/react\";\n\n//Components\nimport FormClient from \"../components/formClient.jsx\";\nimport ModalMessage from \"../components/modalMessage\";\nimport Cliente from \"../components/client\";\nimport Spinner from \"../components/spinner\";\n\n//Server actions\nimport { addClient, deleteClient, getClientByID, getClients, updateClient } from \"../services/client.server\";\nimport { deleteDocument } from \"../services/document.server\";\nimport { authenticator } from \"../auth/auth.server\";\n\n//Styles\nimport styles from '../styles/clientes.css';\n\n\nexport function links() {\n  return [\n  {\n    rel: 'stylesheet',\n    href: styles\n  }];\n\n}\n\nexport async function loader({ request }: any) {\n  const currentUser: any = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/login\"\n  });\n\n  let clients = await getClients();\n  return clients.filter((client: {User: {UserID: any;};}) => client.User.UserID === currentUser.UserID);\n}\n\nexport async function action({ request }: any) {\n  const form = await request.formData();\n  const currentUser: any = await authenticator.isAuthenticated(request);\n  const clients = await getClients();\n\n  const clientID = form.get('ClientID');\n  const documentID = form.get('DocumentID');\n  const name = form.get('name');\n  const identity = form.get('identity');\n  const phone = form.get('phone');\n  const email = form.get('email');\n  const address = form.get('address');\n\n  //Validation\n  let errors: any = {};\n  if (request.method === 'POST' || request.method === 'PUT') {\n    if (name.length === 0) {\n      errors.name = 'El nombre del cliente es obligatorio';\n    }\n    if (name.length > 80) {\n      errors.name = 'El nombre debe contener menos de 80 caracteres';\n    }\n    if (typeof name !== 'string') {\n      errors.name = 'El nombre debe ser un texto';\n    }\n\n    //Identity validation\n    if (identity.length === 0) {\n      errors.identity = 'La identidad es obligatorio';\n    }\n    if (identity.length > 13 || identity.length < 13) {\n      errors.identity = 'La identidad debe contener 13 caracteres';\n    }\n    const coincidentIdentities = clients.filter((client: {Identity: string;}) => client.Identity.toLowerCase() === identity.toLowerCase());\n    if (coincidentIdentities.length > 0) {\n      errors.identity = 'Ya existe un cliente registrado con esta identidad';\n    }\n\n    //Phone number validation\n    if (phone.length !== 8 && phone.length !== 11) {\n      errors.phone = 'El numero telef\u00F3nico debe contener 8 o 11 caracteres';\n    }\n    if (phone.length === 0) {\n      errors.phone = 'El numero telef\u00F3nico es obligatorio';\n    }\n    const coincidentPhone = clients.filter((client: {Phone: string;}) => client.Phone.toLowerCase() === phone.toLowerCase());\n    if (coincidentPhone.length > 0) {\n      errors.phone = 'Ya existe un cliente registrado con este num\u00E9ro telef\u00F3nico';\n    }\n\n    //Email validation\n    const regex = /^[^s@]+@[^s@]+.[^s@]+$/;\n    if (regex.test(email)) {\n      errors.email = 'El correo electr\u00F3nico ingresado no es valido';\n    }\n    if (email.length === 0) {\n      errors.email = 'El correo electr\u00F3nico es obligatorio';\n    }\n    const coincidentEmail = clients.filter((client: {Email: string;}) => client.Email.toLowerCase() === email.toLowerCase());\n    if (coincidentEmail.length > 0) {\n      errors.email = 'Ya existe un cliente registrado con este correo electr\u00F3nico';\n    }\n\n    //Address validation\n    if (address.length === 0) {\n      errors.address = 'La direcci\u00F3n del cliente es obligatoria';\n    }\n  }\n\n  if (Object.keys(errors).length > 0) {\n    return {\n      state: 'ERROR',\n      data: {},\n      errors: errors\n    };\n  }\n\n  const client: any = {\n    User: currentUser.UserID,\n    Name: name,\n    Identity: identity,\n    Phone: phone,\n    Email: email,\n    Address: address\n  };\n\n  switch (request.method) {\n    case 'POST':{\n        const returnedClient = await addClient(client);\n        return {\n          state: 'INSERTED',\n          data: returnedClient,\n          errors: {}\n        };\n      }\n    case 'PUT':{\n        client.ClientID = parseInt(clientID);\n        const returnedState = await updateClient(client);\n        return {\n          state: 'UPDATED',\n          data: returnedState,\n          errors: {}\n        };\n      }\n    case 'DELETE':{\n        let returnedState;\n        const selectedClient = await getClientByID(clientID);\n        if (selectedClient?.Documents.length > 0 || selectedClient?.Dates.length > 0) {\n          return {\n            state: 'CLIENT HAVE DOCUMENTS',\n            data: null,\n            errors: {}\n          };\n        }\n\n        if (clientID) {\n          returnedState = await deleteClient(clientID);\n          return {\n            state: 'CLIENT DELETED',\n            data: returnedState,\n            errors: {}\n          };\n        } else if (documentID) {\n          returnedState = await deleteDocument(documentID);\n          return {\n            state: 'DOCUMENT DELETED',\n            data: returnedState,\n            errors: {}\n          };\n        }\n        return {\n          state: 'UNKNOWN',\n          data: null,\n          errors: {\n            unknown: 'Ha sucedido un error inesperado'\n          }\n        };\n      }\n    default:{\n        throw new Error(\"Unexpected action\");\n      }\n  }\n}\n\nexport default function Clientes() {\n  //States for forms modals\n  const [isVisibleFormCliente, setVisibleFormClient] = useState(false);\n  const [isVisibleFormClienteForEditing, setVisibleFormClientForEditing] = useState(false);\n  const [isVisibleDeleteClient, setVisibleDeleteClient] = useState(false);\n\n  //State for message modals\n  const [insertedMessage, showInsertedMessage] = useState(false);\n  const [updatedMessage, showUpdatedMessage] = useState(false);\n  const [deleteClientMessage, showDeleteClientMessage] = useState(false);\n  const [clientHaveDocumentsMessage, showClientHaveDocumentsMessage] = useState(false);\n  const [errorSelectedMessage, showErrorSelectedMessage] = useState(false);\n\n  //State for client and document selection\n  const [clients, setClients] = useState([]);\n  const [clientSelected, setClientSelected]: any = useState({});\n\n  const loader: any = useLoaderData();\n  const actionResult: any = useActionData();\n\n  useEffect(() => {\n    switch (actionResult?.state) {\n      case 'INSERTED':\n        setVisibleFormClient(false);\n        showInsertedMessage(true);\n        break;\n      case 'UPDATED':\n        setVisibleFormClientForEditing(false);\n        showUpdatedMessage(true);\n        break;\n      case 'CLIENT DELETED':\n        setVisibleDeleteClient(false);\n        showDeleteClientMessage(true);\n        break;\n      case 'CLIENT HAVE DOCUMENTS':\n        setVisibleDeleteClient(false);\n        showClientHaveDocumentsMessage(true);\n        break;\n      default:\n        break;\n    }\n  }, [actionResult]);\n\n  useEffect(() => {\n    setClients(loader);\n  }, [loader]);\n\n  const showFormCliente = (isEditing: boolean) => {\n    if (isEditing) {\n      if (Object.keys(clientSelected).length > 0) {\n        setVisibleFormClientForEditing(true);\n      } else {\n        showErrorSelectedMessage(true);\n      }\n    } else {\n      setVisibleFormClient(true);\n    }\n  };\n\n  const showEliminatedClient = () => {\n    if (Object.keys(clientSelected).length <= 0) {\n      showErrorSelectedMessage(true);\n    } else {\n      setVisibleDeleteClient(true);\n    }\n  };\n\n  const searchClient = (event: any) => {\n    const value = event.target.value.toString().toLowerCase();\n    const actualizedClients = loader?.filter((client: {Name: string;}) => client.Name.toLowerCase().includes(value));\n    setClients(actualizedClients);\n  };\n\n  return (\n    <div className=\"container\">\r\n        {isVisibleFormCliente &&\n      <FormClient\n        method={'POST'}\n        errors={actionResult?.errors}\n        setVisibleFormClient={setVisibleFormClient} />}\n\n      \r\n\r\n        {isVisibleFormClienteForEditing &&\n      <FormClient\n        method={'PUT'}\n        errors={actionResult?.errors}\n        client={clientSelected}\n        setVisibleFormClient={setVisibleFormClientForEditing} />}\n\n      \r\n\r\n        {isVisibleDeleteClient &&\n      <ModalMessage\n        features={\n        {\n          text: \"\u00BFEsta seguro de la eliminaci\u00F3n del cliente?\",\n          isOkCancel: true,\n          indexIcon: 1,\n          data: {\n            name: 'ClientID',\n            value: clientSelected.ClientID\n          }\n        }}\n\n        setVisibleMessage={setVisibleDeleteClient} />}\n\n      \r\n\r\n        {errorSelectedMessage &&\n      <ModalMessage\n        features={\n        {\n          text: \"Seleccione un cliente de la lista\",\n          isOkCancel: false,\n          indexIcon: 0,\n          data: null\n        }}\n\n        setVisibleMessage={showErrorSelectedMessage} />}\n\n      \r\n\r\n        {insertedMessage &&\n      <ModalMessage\n        features={\n        {\n          text: \"El cliente ha sido ingresado exitosamente\",\n          isOkCancel: false,\n          indexIcon: 2,\n          data: null\n        }}\n\n        setVisibleMessage={showInsertedMessage} />}\n\n      \r\n\r\n        {updatedMessage &&\n      <ModalMessage\n        features={\n        {\n          text: \"El cliente ha sido actualizado exitosamente\",\n          isOkCancel: false,\n          indexIcon: 2,\n          data: null\n        }}\n\n        setVisibleMessage={showUpdatedMessage} />}\n\n      \r\n\r\n        {deleteClientMessage &&\n      <ModalMessage\n        features={\n        {\n          text: \"El cliente ha sido eliminado exitosamente\",\n          isOkCancel: false,\n          indexIcon: 2,\n          data: null\n        }}\n\n        setVisibleMessage={showDeleteClientMessage} />}\n\n      \r\n\r\n        {clientHaveDocumentsMessage &&\n      <ModalMessage\n        features={\n        {\n          text: \"El cliente no ha sido eliminado ya que se encontraron datos (documentos, citas) registrados para este cliente\",\n          isOkCancel: false,\n          indexIcon: 0,\n          data: null\n        }}\n\n        setVisibleMessage={showClientHaveDocumentsMessage} />}\n\n      \r\n\r\n        <h1 className=\"heading\">Gestiona tus clientes</h1>\r\n        <p className=\"subheading\">\r\n          Lista completa de los clientes registrados, puedes escribir y\r\n          filtrar para una b\u00FAsqueda mas r\u00E1pida.\r\n        </p>\r\n\r\n        <div className='top-options'>\r\n          <div className=\"search\">\r\n            <img src=\"/img/search.svg\" alt=\"search\" />\r\n            <input\n            type=\"text\"\n            placeholder=\"Buscar\"\n            onChange={(event) => {searchClient(event);}} />\n          \r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"actions\">\r\n          <button\n          className=\"button\"\n          onClick={() => {showFormCliente(false);}}\n          type=\"button\">\n          \r\n            <img src=\"/img/add.svg\" alt=\"add\" />\r\n            <p>Agregar</p>\r\n          </button>\r\n\r\n          <button\n          className=\"button\"\n          onClick={() => {showFormCliente(true);}}>\n          \r\n            <img src=\"/img/edit.svg\" alt=\"add\" />\r\n            <p>Editar</p>\r\n          </button>\r\n\r\n          <button\n          className=\"button\"\n          onClick={() => {showEliminatedClient();}}\n          type=\"button\"\n          value=\"Eliminar\">\n          \r\n            <img src=\"/img/x.svg\" alt=\"add\" />\r\n            <p>Eliminar</p>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"list-scroll\">\r\n          {\n        clients.length > 0 ?\n\n        clients.map((client: {ClientID: number;}) =>\n        <Cliente\n          key={client?.ClientID}\n          client={client}\n          clientSelected={clientSelected}\n          setClientSelected={setClientSelected} />\n\n        ) :\n\n        loader?.length === 0 ?\n\n        <p className='no-found'>A\u00FAn no hay clientes registrados</p> :\n\n        loader?.length > 0 && clients.length === 0 ?\n\n        <p className='no-found'>No se pudieron encontrar clientes</p> :\n\n        <div className='center'>\r\n                        <Spinner />\r\n                      </div>}\n        \r\n        </div>\r\n      </div>);\n\n}", "import { useState } from \"react\";\r\nimport { Form, useNavigation } from \"@remix-run/react\";\r\n\r\nimport Spinner from './spinner';\r\nimport Input from './input';\r\nimport CloseButton from \"./close_button\";\r\n\r\nexport default function FormClient ({ method, errors, client = {}, setVisibleFormClient }: any){\r\n\r\n  const navigation = useNavigation();\r\n\r\n  const ClientID = client?.ClientID\r\n  const [name, setName] = useState(client?.Name || '');\r\n  const [identity, setIdentity] = useState(client?.Identity || '');\r\n  const [phone, setPhone] = useState(client?.Phone || '');\r\n  const [email, setEmail] = useState(client?.Email || '');\r\n  const [address, setAddress] = useState(client?.Address || '');\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <Form\r\n        className=\"form\"\r\n        method={method}\r\n      >\r\n        <CloseButton\r\n          setVisibleForm={setVisibleFormClient}\r\n        />\r\n\r\n        <h1 className=\"heading\">{Object.keys(client).length === 0 ? 'Agregar nuevo cliente' : 'Modificar cliente' }</h1>\r\n        <h2 className=\"subheading\">\r\n          Ingresa toda la informaci\u00F3n del cliente para {Object.keys(client).length === 0 ? 'agregarlo' : 'modificarlo'}\r\n        </h2>\r\n        <br/>\r\n\r\n        <div className=\"inputs\">\r\n          <input name=\"ClientID\" type=\"hidden\" value={ClientID}/>\r\n\r\n          <Input\r\n            title='Nombre'\r\n            name='name'\r\n            placeholder='Nombre del cliente'\r\n            value={name}\r\n            setValue={setName}\r\n            error={errors?.name}\r\n          />\r\n\r\n          <Input\r\n            title='Identidad'\r\n            name='identity'\r\n            type='number'\r\n            placeholder='Identidad del cliente'\r\n            value={identity}\r\n            setValue={setIdentity}\r\n            error={errors?.identity}\r\n          />\r\n\r\n          <Input\r\n            title='Numero telefonico'\r\n            name='phone'\r\n            type='tel'\r\n            maxLength={15}\r\n            placeholder='Numero telefonico del cliente'\r\n            value={phone}\r\n            setValue={setPhone}\r\n            error={errors?.phone}\r\n          />\r\n\r\n          <Input\r\n            title='Correo electronico'\r\n            name='email'\r\n            type='email'\r\n            placeholder='Correo electronico del cliente'\r\n            value={email}\r\n            setValue={setEmail}\r\n            error={errors?.email}\r\n          />\r\n\r\n          <Input\r\n            title='Domicilio'\r\n            name='address'\r\n            placeholder='Direcci\u00F3n del cliente'\r\n            value={address}\r\n            setValue={setAddress}\r\n            error={errors?.address}\r\n          />\r\n        </div>\r\n\r\n        <div className='loading'>\r\n          <input className=\"button\" type=\"submit\" value='Guardar'/>\r\n          { navigation?.state !== 'idle' &&\r\n            <Spinner/>\r\n          }\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n", "export default function Spinner ({}){\r\n  return (\r\n    <div className=\"spinner\">\r\n      <div className=\"bounce1\"></div>\r\n      <div className=\"bounce2\"></div>\r\n      <div className=\"bounce3\"></div>\r\n    </div>\r\n  )\r\n}\r\n", "export default function Input ({ title, name, type = 'text', placeholder = '', maxLength = 1000, value, setValue, error }: any){\r\n  return (\r\n    <div className=\"input\">\r\n      <label htmlFor={name}>{title}</label>\r\n      <input\r\n        name={name}\r\n        id={name}\r\n        type={type}\r\n        maxLength={maxLength}\r\n        placeholder={placeholder}\r\n        onChange={(e) => { setValue(e.target.value) }}\r\n        value={value}\r\n      />\r\n      { error ? <p className=\"error\">{error}</p> : null }\r\n    </div>\r\n  )\r\n}\r\n", "import { Link } from '@remix-run/react'\r\n\r\nexport default function Client ({ client, clientSelected, setClientSelected }: any){\r\n  const { Name, Identity, ClientID, URL } = client\r\n\r\n  return (\r\n      <div className=\"item-list\">\r\n        <Link to={`/clientes/${URL}`} className=\"item-main\">\r\n          <img src=\"/img/user-circle.svg\" alt=\"user\"/>\r\n          <div className=\"item-information\">\r\n            <h4>{Name}</h4>\r\n            <p>{Identity}</p>\r\n          </div>\r\n        </Link>\r\n\r\n        <img\r\n          className=\"check\"\r\n          src={`/img/${ clientSelected.ClientID === ClientID ? 'square-check.svg' : 'square.svg'}`}\r\n          onClick={()=> { setClientSelected(clientSelected.ClientID  === ClientID ? {} : client) }}\r\n          alt=\"square\"\r\n        />\r\n      </div>\r\n    )\r\n}\r\n", "export async function getClients(){\r\n  const response = await fetch(`${process.env.API_URL}/clients`);\r\n  return await response.json()\r\n}\r\n\r\nexport async function getClientByID(clientID: string){\r\n  const response = await fetch(`${process.env.API_URL}/clients/${clientID}`);\r\n  return await response.json()\r\n}\r\n\r\nexport async function  addClient( client: any ){\r\n  const response = await fetch(`${process.env.API_URL}/clients`, {\r\n    method: 'POST',\r\n    headers: {\r\n      \"Content-Type\" : \"application/json\"\r\n    },\r\n    body: JSON.stringify(client)\r\n  })\r\n  return await response.json()\r\n}\r\n\r\nexport async function  updateClient( client: any ){\r\n  const response = await fetch(`${process.env.API_URL}/clients`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      \"Content-Type\" : \"application/json\"\r\n    },\r\n    body: JSON.stringify(client)\r\n  })\r\n  return await response.json()\r\n}\r\n\r\nexport async function deleteClient( ClientID: string ){\r\n  const response = await fetch( `${process.env.API_URL}/clients/${ClientID}`, {\r\n    method: 'DELETE'\r\n  })\r\n  return await response.json()\r\n}\r\n", "export async function addDocument( documentFormData: any ){\r\n  const response = await fetch(`${process.env.API_URL}/documents`, {\r\n    method: 'POST',\r\n    body: documentFormData\r\n  })\r\n  return await response.json()\r\n}\r\n\r\nexport async function deleteDocument(DocumentID: string){\r\n  const response = await fetch(`${process.env.API_URL}/documents/${DocumentID}`, {\r\n    method: 'DELETE',\r\n  })\r\n  return await response.json();\r\n}\r\n", "import { useState, useEffect } from \"react\";\r\nimport {Form, useActionData, useNavigate} from '@remix-run/react'\r\n\r\nimport {getUsers, getUsersByID, updateUser} from \"../services/user.server\";\r\n\r\nimport EnterEmail from \"../components/forgot-password/enter-email\";\r\nimport EnterCode from \"../components/forgot-password/enter-code\";\r\nimport RestorePassword from \"../components/forgot-password/restore-password\";\r\nimport {generateRandomCode} from \"../utils/helpers\";\r\nimport {sendRecoverAccountEmail} from \"../services/email.server\";\r\n\r\n\r\nexport async function action({ request }: any){\r\n  const form = await request.formData();\r\n  const step = parseInt(form.get('step'));\r\n  const users = await getUsers();\r\n  let UserID, user;\r\n\r\n  switch ( step ){\r\n    case 1:\r\n      const email = form.get('email');\r\n\r\n      if(email.length === 0){\r\n        return { STATUS: 'ERROR', ERROR: 'El correo electr\u00F3nico es obligatorio' }\r\n      }\r\n\r\n      const selectedUser = users.filter( (user: { Email: string; }) => user.Email === email);\r\n\r\n      if(selectedUser.length === 0){\r\n        return { STATUS: 'ERROR', ERROR: 'No se encontr\u00F3 ning\u00FAn usuario con el correo electr\u00F3nico ingresado' }\r\n      }\r\n\r\n      const token = generateRandomCode(6);\r\n      user = {\r\n        UserID: selectedUser[0]?.UserID,\r\n        Token: token\r\n      }\r\n\r\n      await updateUser(user);\r\n\r\n      await sendRecoverAccountEmail( selectedUser[0]?.Name, token, selectedUser[0]?.Email )\r\n\r\n      return {\r\n        STATUS: 'VALIDATED',\r\n        DATA: selectedUser[0]?.UserID\r\n      }\r\n    case 2:\r\n      UserID = form.get('UserID');\r\n\r\n      const letter0 = form.get('letter0');\r\n      const letter1 = form.get('letter1');\r\n      const letter2 = form.get('letter2');\r\n      const letter3 = form.get('letter3');\r\n      const letter4 = form.get('letter4');\r\n      const letter5 = form.get('letter5');\r\n\r\n      const code = [ letter0, letter1, letter2, letter3, letter4, letter5 ];\r\n\r\n      for( let i = 0; i < 6; i++ ){\r\n        if(code[i]?.length === 0){\r\n          return {\r\n            STATUS: 'ERROR',\r\n            ERROR: 'Todos los d\u00EDgitos son obligatorios'\r\n          }\r\n        }\r\n      }\r\n\r\n      const currentUser = await getUsersByID(UserID);\r\n      const completeCode = code.join('');\r\n\r\n      if( currentUser?.Token === completeCode ){\r\n        return {\r\n          STATUS: 'CODEPASSED',\r\n        }\r\n      }\r\n\r\n      return {\r\n        STATUS: 'ERROR',\r\n        ERROR: 'El c\u00F3digo ingresado es incorrecto'\r\n      }\r\n    case 3:\r\n      UserID = form.get('UserID')\r\n      const password = form.get('password');\r\n      const repeatPassword = form.get('repeat-password')\r\n\r\n      if( password.length === 0 ){\r\n        return { STATUS: 'ERROR', ERROR: 'La contrase\u00F1a es obligatorio' }\r\n      }\r\n      if( password.length > 0 && password.length < 8){\r\n        return { STATUS: 'ERROR', ERROR: 'La contrase\u00F1a debe contener al menos 8 caracteres' }\r\n      }\r\n      if( repeatPassword.length === 0 ){\r\n        return { STATUS: 'ERROR', ERROR: 'Por favor, repita la contrase\u00F1a' }\r\n      }\r\n      if( repeatPassword.length > 0 && repeatPassword.length < 8){\r\n        return { STATUS: 'ERROR', ERROR: 'La contrase\u00F1a debe contener al menos 8 caracteres' }\r\n      }\r\n      if( password !== repeatPassword ){\r\n        return { STATUS: 'ERROR', ERROR: 'Las contrase\u00F1as no coinciden' }\r\n      }\r\n\r\n      user = {\r\n        UserID: UserID,\r\n        Password: password,\r\n        Token: null\r\n      }\r\n\r\n      await updateUser( user )\r\n\r\n      return {\r\n        STATUS: 'RESTORED'\r\n      }\r\n    default: {\r\n      return {\r\n        STATUS: 'ERROR',\r\n        ERROR: 'No valid option'\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default function ForgotPassword (){\r\n  const action: any = useActionData();\r\n  const navigate = useNavigate();\r\n\r\n  const [step, setStep] = useState(1);\r\n  const [userID, setUserID] = useState(0)\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [repeatPassword, setRepeatPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    switch( action?.STATUS ){\r\n      case 'VALIDATED':\r\n        setUserID( action?.DATA )\r\n\r\n        setStep(2);\r\n        break;\r\n      case 'CODEPASSED':\r\n        setStep(3);\r\n        break;\r\n      case 'RESTORED':\r\n        navigate('/login');\r\n        break;\r\n    }\r\n  }, [action]);\r\n\r\n\r\n  return (\r\n    <main className='login-modal'>\r\n      <Form className='form' method='POST'>\r\n        { step === 1\r\n          ?\r\n            <EnterEmail\r\n              email={email}\r\n              setEmail={setEmail}\r\n            />\r\n          :\r\n          step === 2\r\n          ?\r\n            <EnterCode\r\n              UserID={userID}\r\n            />\r\n          :\r\n            <RestorePassword\r\n              password={password}\r\n              setPassword={setPassword}\r\n              repeatPassword={repeatPassword}\r\n              setRepeatPassword={setRepeatPassword}\r\n              UserID={userID}\r\n            />\r\n        }\r\n\r\n      </Form>\r\n\r\n      <div className='steps'>\r\n        <p className={`step ${step === 1 ? 'active' : ''}`}>1</p>\r\n        <div className='step-line'></div>\r\n        <p className={`step ${step === 2 ? 'active' : ''}`}>2</p>\r\n        <div className='step-line'></div>\r\n        <p className={`step ${step === 3 ? 'active' : ''}`}>3</p>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n", "export async function getUsers(){\r\n  const response = await fetch(`${process.env.API_URL}/users`);\r\n  return await response.json();\r\n}\r\n\r\nexport async function getUsersByID( UserID: string ){\r\n  const response = await fetch(`${process.env.API_URL}/users/${UserID}`);\r\n  return await response.json();\r\n}\r\n\r\nexport async function createPreviousUser(code: string, accessLevel: string){\r\n  const user = {\r\n    Name: '',\r\n    Email: '',\r\n    Phone: '',\r\n    Password: code,\r\n    Token: code,\r\n    AccessLevel: accessLevel,\r\n    State: 0\r\n  }\r\n  const response = await fetch(`${process.env.API_URL}/users`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(user)\r\n  });\r\n  return await response.json();\r\n}\r\n\r\nexport async function updateUser(user: any){\r\n  const response = await fetch(`${process.env.API_URL}/users`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(user)\r\n  });\r\n  return await response.json();\r\n}\r\n\r\nexport async function deleteUser(userID: string){\r\n  const response = await fetch(`${process.env.API_URL}/users/${userID}`, {\r\n    method: \"DELETE\"\r\n  });\r\n  return await response.json();\r\n}\r\n", "import {Link, useActionData, useNavigation} from \"@remix-run/react\";\r\nimport Input from \"../input\";\r\nimport Spinner from \"../spinner\";\r\nimport React from \"react\";\r\n\r\nexport default function EnterEmail ({ email, setEmail }: any){\r\n  const action: any = useActionData();\r\n  const navigation = useNavigation();\r\n\r\n  return (\r\n    <>\r\n      <h1 className='heading'>Recupera tu cuenta</h1>\r\n      <p className='subheading'>\r\n        Para comenzar con la recuperaci\u00F3n de tu cuenta, ingresa tu correo electr\u00F3nico\r\n        para verificar que tu cuenta realmente existe.\r\n      </p>\r\n      <br/>\r\n\r\n      <div className='inputs'>\r\n        <input name='step' type=\"hidden\" value={1}/>\r\n\r\n        <Input\r\n          title='Correo electr\u00F3nico'\r\n          name='email'\r\n          placeholder='Ingresa tu correo electronico'\r\n          type='email'\r\n          value={email}\r\n          setValue={setEmail}\r\n          error=''\r\n        />\r\n\r\n        <div className='account-options'>\r\n          <Link to='/login' className='option'>\u00BFYa tienes una cuenta? Inicia sesi\u00F3n</Link>\r\n          <Link to='/create-account' className='option'>\u00BFAun no tiene una cuenta? Crea una nueva</Link>\r\n        </div>\r\n\r\n        <p className='error'>{ action?.ERROR }</p>\r\n\r\n        <div className='loading'>\r\n          <input\r\n            className=\"button\"\r\n            type='submit'\r\n            value='Verificar'\r\n          />\r\n          { navigation?.state !== 'idle' &&\r\n            <Spinner/>\r\n          }\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n", "import {useActionData, useNavigation} from \"@remix-run/react\";\r\n\r\nimport Spinner from \"../spinner\";\r\nimport React from \"react\";\r\n\r\nexport default function EnterCode ({ UserID }: {UserID: number}){\r\n  const action: any = useActionData();\r\n  const navigation = useNavigation();\r\n\r\n  const inputs: any = [\r\n    React.createRef(),\r\n    React.createRef(),\r\n    React.createRef(),\r\n    React.createRef(),\r\n    React.createRef(),\r\n    React.createRef()\r\n  ];\r\n\r\n  const handleInput = (e: any, index: number) => {\r\n    if(e.target.value.length === e.target.maxLength){\r\n      e.target.value = e.target.value.toString().toUpperCase();\r\n      inputs[index + 1]?.current.focus();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className='heading'>Ingrese el c\u00F3digo de verificaci\u00F3n</h1>\r\n      <p className='subheading'>\r\n        Para continuar ingrese el c\u00F3digo que ha sido enviado\r\n        ha su correo electr\u00F3nico.\r\n      </p>\r\n      <br/>\r\n\r\n      <section className='inputs'>\r\n        <input type=\"hidden\" name='step' value={2}/>\r\n        <input type=\"hidden\" name='UserID' value={UserID}/>\r\n\r\n        <p className='subheading'>C\u00F3digo de recuperaci\u00F3n</p>\r\n        <div className='code'>\r\n          { inputs.map((input: any, index: number) =>\r\n            <input\r\n              key={index}\r\n              type=\"text\"\r\n              placeholder='-'\r\n              className='code-letter'\r\n              ref={input}\r\n              name={`letter${index}`}\r\n              maxLength={1}\r\n              onChange={(e)=> { handleInput(e, index) }}\r\n            />\r\n          )\r\n          }\r\n        </div>\r\n\r\n        <p className='error'>{ action?.ERROR }</p>\r\n\r\n        <div className='loading'>\r\n          <input\r\n            className=\"button\"\r\n            type=\"submit\"\r\n            value='Verificar'\r\n          />\r\n          { navigation?.state !== 'idle' &&\r\n            <Spinner/>\r\n          }\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n", "import {useActionData, useNavigation} from \"@remix-run/react\";\r\n\r\nimport Input from \"../input\";\r\nimport Spinner from \"../spinner\";\r\nimport React from \"react\";\r\n\r\nexport default function RestorePassword ({ password, setPassword, repeatPassword, setRepeatPassword, UserID }: any){\r\n  const action: any = useActionData();\r\n  const navigation = useNavigation();\r\n\r\n  return (\r\n    <>\r\n      <h1 className='heading'>Restablecer contrase\u00F1a</h1>\r\n      <p className='subheading'>\r\n        Ingrese su nueva contrase\u00F1a y vuelva a repetirla para finalizar\r\n        con el restablecimiento de la contrase\u00F1a de su cuenta.\r\n      </p>\r\n      <br/>\r\n\r\n      <section className='inputs'>\r\n        <input type=\"hidden\" name='step' value={3}/>\r\n        <input type=\"hidden\" name='UserID' value={UserID}/>\r\n\r\n        <Input\r\n          title='Nueva contrase\u00F1a'\r\n          name='password'\r\n          placeholder='Ingrese la contrase\u00F1a...'\r\n          type='password'\r\n          value={password}\r\n          setValue={setPassword}\r\n          error=''\r\n        />\r\n\r\n        <Input\r\n          title='Repita la nueva contrase\u00F1a'\r\n          name='repeat-password'\r\n          placeholder='Repita la contrase\u00F1a...'\r\n          type='password'\r\n          value={repeatPassword}\r\n          setValue={setRepeatPassword}\r\n          error=''\r\n        />\r\n\r\n        <p className='error'>{ action?.ERROR }</p>\r\n\r\n        <div className='loading'>\r\n          <input className=\"button\" type=\"submit\" value='Verificar'/>\r\n          { navigation?.state !== 'idle' &&\r\n            <Spinner/>\r\n          }\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n", "export function formattedDate(timestamp: any){\r\n  const dateObj = new Date(timestamp);\r\n\r\n  const options: any = {\r\n    year: \"numeric\",\r\n    month: \"long\", \r\n    day: \"numeric\",\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n    hour12: true,\r\n  };\r\n\r\n  return dateObj.toLocaleString(\"es-ES\", options);\r\n}\r\n\r\nexport const accessLevel = [\r\n  {\r\n    AccessLevelID: 'N',\r\n    Name: 'Dependiente'\r\n  },\r\n  {\r\n    AccessLevelID: 'A',\r\n    Name: 'Administrador'\r\n  },\r\n  {\r\n    AccessLevelID: 'R',\r\n    Name: 'Ra\u00EDz'\r\n  }\r\n]\r\n\r\nexport function generateRandomCode(length: number) {\r\n  const character = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n  let code = '';\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    const randomCharacter = character[Math.floor(Math.random() * character.length)];\r\n    code += randomCharacter;\r\n  }\r\n  return code;\r\n}\r\n", "export async function sendRecoverAccountEmail(name: string, token: string, email: string){\r\n  const nodemailer = require('nodemailer');\r\n\r\n  const transporter = nodemailer.createTransport({\r\n    service: 'Gmail',\r\n    auth: {\r\n      user: process.env.EMAIL,\r\n      pass: process.env.EMAIL_PASSWORD,\r\n    }\r\n  });\r\n\r\n  const mailOptions = {\r\n    from: process.env.EMAIL,\r\n    to: email,\r\n    subject: 'Recupera tu cuenta',\r\n    html: `<!DOCTYPE html>\r\n              <html lang=\"en\">\r\n                <head>\r\n                  <meta charset=\"UTF-8\">\r\n                  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n                  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n                  <title>Document</title>\r\n                  <style>\r\n                    body {\r\n                      background-color: #f5f5f5;\r\n                      font-family: Arial, Helvetica, sans-serif;\r\n                      line-height: 1.5;\r\n                      text-align: center;\r\n                    }\r\n                    .titulo{\r\n                      text-align: center;\r\n                      max-width: 500px;\r\n                      width: 90%;\r\n                      margin: 20px auto 0 auto;\r\n                      padding: 20px;\r\n                      background-color: rgb(3, 57, 103);\r\n                      border-radius: 15px 15px 0 0;\r\n                      box-shadow: 0 -2px 7px 0 rgba(166,166,166,1);\r\n                    }\r\n                    .contenedor{\r\n                      text-align: center;\r\n                      max-width: 500px;\r\n                      width: 90%;\r\n                      margin: 0 auto;\r\n                      padding: 20px;\r\n                      border-radius: 0 0 15px 15px;\r\n                      background-color: white;\r\n                      box-shadow: 0 2px 7px 0 rgba(166,166,166,1);\r\n                    }\r\n                    h1 {\r\n                      width: 100%;\r\n                      color: #fff;\r\n                      margin: 0;\r\n                    }\r\n                    p{\r\n                      color: #333;\r\n                      font-size: 18px;\r\n                    }\r\n            \r\n                    .codigo {\r\n                      text-align: center;\r\n                      width: 140px;\r\n                      background-color: rgb(3, 57, 103);\r\n                      color: white;\r\n                      padding: 10px;\r\n                      border-radius: 5px;\r\n                      font-size: 20px;\r\n                      font-weight: bold;\r\n                      margin: 0 auto;\r\n                    }\r\n                  </style>\r\n                </head>\r\n                <body>\r\n                  <div class=\"titulo\">\r\n                      <h1>Olvidaste tu contrase\u00F1a</h1>\r\n                  </div>\r\n                    <div class=\"contenedor\">\r\n                      <p>\r\n                        Hola, <strong>${ name }</strong> se ha solicitado el cambio de contrase\u00F1a para tu cuenta \r\n                        en Grupo sosa para poder restablecer se requiere \u00FAnicamente del c\u00F3digo de recuperaci\u00F3n que se te otorgara\r\n                        por medio de este correo.\r\n                      </p>\r\n                      <p>\r\n                        Tu c\u00F3digo de para la recuperaci\u00F3n de tu cuenta es el siguiente:\r\n                      </p>\r\n                      <p class=\"contenedor-codigo\">\r\n                        <div class=\"codigo\">${ token.split('').join(' ') }</div>\r\n                      </p>\r\n                      <p>\r\n                        Te recomendamos no compartir este c\u00F3digo con nadie. <br>\r\n                        Si no has solicitado el cambio de contrase\u00F1a, por favor ignora este correo. <br>\r\n                      </p>\r\n                    </div>\r\n                </body>n\r\n              </html>`\r\n  };\r\n\r\n  console.log('Enviando correo...');\r\n\r\n  await transporter.sendMail(mailOptions, (error: any, info: any) => {\r\n    if (error) {\r\n      console.log('Error al enviar el correo:', error);\r\n    } else {\r\n      console.log('Correo enviado:', info.response);\r\n    }\r\n  });\r\n}\r\n", "import { useState, useEffect } from \"react\";\nimport { useActionData, useLoaderData } from \"@remix-run/react\";\n\n//Components\nimport FormSubject from \"../components/formSubject\";\nimport ModalMessage from \"../components/modalMessage\";\nimport Subject from \"../components/subject\";\nimport Spinner from \"../components/spinner\";\n\n//Server actions\nimport { getSubjects, addSubject, updateSubject, deleteSubject, getSubjectByID } from \"../services/subject.server\";\n\n//Styles\nimport clientStyle from '../styles/clientes.css';\nimport { authenticator } from \"../auth/auth.server\";\n\n\nexport function links() {\n  return [\n  {\n    rel: 'stylesheet',\n    href: clientStyle\n  }];\n\n}\n\nexport async function loader({ request }: any) {\n  await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/login\"\n  });\n\n  return await getSubjects();\n}\n\nexport async function action({ request }: any) {\n  const form = await request.formData();\n\n  const name = form.get('Name');\n  const subjects = await getSubjects();\n\n  const errors: any = {};\n  if (request.method === 'POST' || request.method === 'PUT') {\n    if (name.length === 0) {\n      errors.name = 'El nombre de la categor\u00EDa es obligatorio';\n    }\n    if (name.length > 30) {\n      errors.name = 'El nombre no debe exceder los 30 caracteres';\n    }\n    const coincidentName = subjects.filter((subject: {Name: string;}) => subject.Name.toLowerCase() === name.toLowerCase());\n    if (coincidentName.length > 0) {\n      errors.name = 'Ya existe una categor\u00EDa con el nombre descrito';\n    }\n  }\n\n  if (Object.keys(errors).length > 0) {\n    return {\n      status: 'ERROR',\n      errors: errors,\n      data: null\n    };\n  }\n\n  const subject: any = {\n    Name: name,\n    User: 1\n  };\n\n  switch (request.method) {\n    case 'POST':\n      const insertedSubject = await addSubject(subject);\n      return {\n        status: 'INSERTED',\n        errors: {},\n        data: insertedSubject\n      };\n    case 'PUT':\n      const SubjectID = form.get('SubjectID');\n      subject.SubjectID = SubjectID;\n      const updatedSubject = await updateSubject(subject);\n      return {\n        status: 'UPDATED',\n        errors: {},\n        data: updatedSubject\n      };\n    case 'DELETE':\n      const SubjectIDForDelete = form.get('SubjectID');\n\n      //Verificando que la materia no tenga documentos vinculados\n      const subjectTarget = await getSubjectByID(SubjectIDForDelete);\n\n      console.log(subjectTarget);\n\n      if (subjectTarget?.Documents.length > 0) {\n        return {\n          status: 'SUBJECT HAVE DOCUMENTS',\n          errors: {},\n          data: null\n        };\n      }\n\n      const deleteResponse = await deleteSubject(SubjectIDForDelete);\n\n      return {\n        status: 'DELETED',\n        errors: {},\n        data: deleteResponse\n      };\n    default:{\n        throw new Error(\"Unexpected action\");\n      }\n  }\n}\n\nexport default function Materias() {\n  const [subjectSelected, setSubjectSelected]: any = useState({});\n\n  const [showModalSubject, setShowModalSubject] = useState(false);\n  const [showModalSubjectForEditing, setShowModalSubjectForEditing] = useState(false);\n  const [showModalSubjectDelete, setShowModalSubjectDelete] = useState(false);\n  const [showErrorSelectedMessage, setShowErrorSelectedMessage] = useState(false);\n  const [showErrorEliminationMessage, setShowErrorEliminationMessage] = useState(false);\n  const [showInsertedMessage, setShowInsertedMessage] = useState(false);\n  const [showUpdatedMessage, setShowUpdatedMessage] = useState(false);\n  const [showDeletedMessage, setShowDeletedMessage] = useState(false);\n\n  const loader: any = useLoaderData();\n  const actionResult: any = useActionData();\n\n  const [subjects, setSubjects] = useState([]);\n\n  useEffect(() => {\n    setSubjects(loader);\n  }, [loader]);\n\n  const searchSubjects = (event: any) => {\n    const value = event.target.value.toString().toLowerCase();\n    const actualizedSubjects = loader?.filter((subject: {Name: string;}) => subject.Name.toLowerCase().includes(value));\n    setSubjects(actualizedSubjects);\n  };\n\n  const showFormSubject = (isEditing: boolean) => {\n    if (isEditing) {\n      if (Object.keys(subjectSelected).length > 0) {\n        setShowModalSubjectForEditing(true);\n      } else {\n        setShowErrorSelectedMessage(true);\n      }\n    } else {\n      setShowModalSubject(true);\n    }\n  };\n\n  const showDeleteMessage = () => {\n    if (Object.keys(subjectSelected).length > 0) {\n      setShowModalSubjectDelete(true);\n    } else {\n      setShowErrorSelectedMessage(true);\n    }\n  };\n\n  useEffect(() => {\n    switch (actionResult?.status) {\n      case 'INSERTED':\n        setShowModalSubject(false);\n        setShowInsertedMessage(true);\n        break;\n      case 'UPDATED':\n        setShowModalSubjectForEditing(false);\n        setShowUpdatedMessage(true);\n        break;\n      case 'DELETED':\n        setShowModalSubjectDelete(false);\n        setShowDeletedMessage(true);\n        break;\n      case 'SUBJECT HAVE DOCUMENTS':\n        setShowModalSubjectDelete(false);\n        setShowErrorEliminationMessage(true);\n        break;\n      default:\n        break;\n    }\n  }, [actionResult]);\n\n  return (\n    <div className=\"container\">\r\n\r\n      {showModalSubject &&\n      <FormSubject\n        subject={{}}\n        method={'POST'}\n        errors={actionResult?.errors}\n        setShowModalCategory={setShowModalSubject} />}\n\n      \r\n\r\n      {showModalSubjectForEditing &&\n      <FormSubject\n        subject={subjectSelected}\n        method={'PUT'}\n        errors={actionResult?.errors}\n        setShowModalCategory={setShowModalSubjectForEditing} />}\n\n      \r\n\r\n      {showErrorSelectedMessage &&\n      <ModalMessage\n        features={\n        {\n          text: \"Seleccione una materia de la lista\",\n          isOkCancel: false,\n          indexIcon: 0,\n          data: null\n        }}\n\n        setVisibleMessage={setShowErrorSelectedMessage} />}\n\n      \r\n\r\n      {showErrorEliminationMessage &&\n      <ModalMessage\n        features={\n        {\n          text: \"La materia no ha sido eliminada ya que se encontraron datos (documentos) vinculados a la materia\",\n          isOkCancel: false,\n          indexIcon: 0,\n          data: null\n        }}\n\n        setVisibleMessage={setShowErrorEliminationMessage} />}\n\n      \r\n\r\n      {showInsertedMessage &&\n      <ModalMessage\n        features={\n        {\n          text: \"La materia ha sido agregado exitosamente\",\n          isOkCancel: false,\n          indexIcon: 2,\n          data: null\n        }}\n\n        setVisibleMessage={setShowInsertedMessage} />}\n\n      \r\n\r\n      {showUpdatedMessage &&\n      <ModalMessage\n        features={\n        {\n          text: \"La materia ha sido modificada exitosamente\",\n          isOkCancel: false,\n          indexIcon: 2,\n          data: null\n        }}\n\n        setVisibleMessage={setShowUpdatedMessage} />}\n\n      \r\n\r\n      {showDeletedMessage &&\n      <ModalMessage\n        features={\n        {\n          text: \"La materia ha sido eliminada exitosamente\",\n          isOkCancel: false,\n          indexIcon: 2,\n          data: null\n        }}\n\n        setVisibleMessage={setShowDeletedMessage} />}\n\n      \r\n\r\n      {showModalSubjectDelete &&\n      <ModalMessage\n        features={\n        {\n          text: \"\u00BFEsta seguro de la eliminaci\u00F3n de la materia seleccionada?\",\n          isOkCancel: true,\n          indexIcon: 1,\n          data: {\n            name: 'SubjectID',\n            value: subjectSelected?.SubjectID\n          }\n        }}\n\n        setVisibleMessage={setShowModalSubjectDelete} />}\n\n      \r\n\r\n      <h1 className=\"heading\">Lista de materias</h1>\r\n      <h2 className=\"subheading\">\r\n        Gestiona las listas disponibles en la plataforma creando nuevas materias.\r\n      </h2>\r\n\r\n      <div className='top-options'>\r\n        <div className=\"search\">\r\n          <img src=\"/img/search.svg\" alt=\"search\" />\r\n          <input\n            type=\"text\"\n            placeholder=\"Buscar\"\n            onChange={(event) => {searchSubjects(event);}} />\n          \r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"actions\">\r\n        <button\n          className=\"button\"\n          onClick={() => {showFormSubject(false);}}\n          type=\"button\">\n          \r\n          <img src=\"/img/add.svg\" alt=\"add\" />\r\n          <p>Agregar materia</p>\r\n        </button>\r\n\r\n        <button\n          className=\"button\"\n          onClick={() => {showFormSubject(true);}}>\n          \r\n          <img src=\"/img/edit.svg\" alt=\"add\" />\r\n          <p>Editar materia</p>\r\n        </button>\r\n\r\n        <button\n          className=\"button\"\n          onClick={() => {showDeleteMessage();}}>\n          \r\n          <img src=\"/img/x.svg\" alt=\"delete\" />\r\n          <p>Eliminar materia</p>\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"list-scroll\">\r\n        {subjects.length > 0 ?\n\n        subjects.map((subject: {SubjectID: number;}) =>\n        <Subject\n          key={subject.SubjectID}\n          subject={subject}\n          subjectSelected={subjectSelected}\n          setSubjectSelected={setSubjectSelected} />\n\n        ) :\n\n        loader?.length === 0 ?\n\n        <p className='no-found'>A\u00FAn no hay materias registrados</p> :\n\n        loader?.length > 0 && subjects.length === 0 ?\n\n        <p className='no-found'>No se pudieron encontrar materias</p> :\n\n        <div className='center'>\r\n                  <Spinner />\r\n                </div>}\n        \r\n      </div>\r\n    </div>);\n\n}", "import { useState } from \"react\";\r\nimport { Form, useNavigation } from \"@remix-run/react\";\r\n\r\nexport default function FormSubject ({ subject, method, errors = {}, setShowModalCategory }: any){\r\n\r\n  const isSubject = Object.keys(subject).length > 0;\r\n  const [name, setName] = useState(subject?.Name || '');\r\n  const navigation = useNavigation();\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <Form\r\n        className=\"form\"\r\n        method={method}\r\n        action={'/materias'}\r\n      >\r\n        <img\r\n          src=\"/img/x.svg\"\r\n          className=\"button-close\"\r\n          alt=\"x\"\r\n          onClick={\r\n            ()=> {\r\n              setShowModalCategory(false)\r\n            }\r\n          }\r\n        />\r\n\r\n        <h1 className=\"heading\">\r\n          { !isSubject ? 'Agregar nueva materia' : 'Modificar materia' }\r\n        </h1>\r\n        <h2 className=\"subheading\">\r\n          { !isSubject\r\n            ? 'Agregue el nombre de la materia para guardar en la lista'\r\n            : 'Realice los cambios necesarios para guardar'\r\n          }\r\n        </h2>\r\n        <br/>\r\n\r\n        <div className=\"inputs\">\r\n          <div className=\"input\">\r\n            { isSubject &&\r\n              <input type=\"hidden\" name='SubjectID' value={subject?.SubjectID}/>\r\n            }\r\n\r\n            <label htmlFor=\"name\">Nombre</label>\r\n            <input\r\n              name='Name'\r\n              id=\"Name\"\r\n              type=\"text\"\r\n              placeholder=\"Escriba el nombre de la materia...\"\r\n              onChange={(e) => { setName(e.target.value) }}\r\n              value={name}\r\n            />\r\n\r\n            { errors?.name ? <p className='error'>{errors.name}</p> : null }\r\n          </div>\r\n        </div>\r\n\r\n        <div className='loading'>\r\n          <input className=\"button\" type=\"submit\" value={isSubject ? 'Modificar' : 'Guardar'}/>\r\n          { navigation?.state !== 'idle' &&\r\n            <div className=\"spinner\">\r\n              <div className=\"bounce1\"></div>\r\n              <div className=\"bounce2\"></div>\r\n              <div className=\"bounce3\"></div>\r\n            </div>\r\n          }\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n", "import {Link} from \"@remix-run/react\";\r\n\r\nexport default function Subject ({ subject, subjectSelected, setSubjectSelected }: any){\r\n\r\n  const { SubjectID, Name, Documents } = subject\r\n\r\n  return (\r\n    <div className=\"item-list\">\r\n      <Link to={`/materias/${Name}`} className=\"item-main\">\r\n        <img src=\"/img/category.svg\" alt=\"user\"/>\r\n        <div className=\"item-information\">\r\n          <h4>{Name}</h4>\r\n          <p>Numero total de documentos: {Documents?.length}</p>\r\n        </div>\r\n      </Link>\r\n\r\n      <img\r\n        className='check'\r\n        src={`/img/${ subjectSelected.SubjectID === SubjectID ? 'square-check.svg' : 'square.svg'}`}\r\n        onClick={()=> { setSubjectSelected(subjectSelected.SubjectID  === SubjectID ? {} : subject) }}\r\n        alt=\"square\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n", "export async function getSubjects(){\r\n  const response = await fetch(`${process.env.API_URL}/subjects`)\r\n  return await response.json()\r\n}\r\n\r\nexport async function getSubjectByID(SubjectID: string){\r\n  const response = await fetch(`${process.env.API_URL}/subjects/${SubjectID}`)\r\n  return await response.json();\r\n}\r\n\r\nexport async function addSubject( subject: any ){\r\n  const response = await fetch(`${process.env.API_URL}/subjects`, {\r\n    method: 'POST',\r\n    headers: {\r\n      \"Content-Type\" : \"application/json\"\r\n    },\r\n    body: JSON.stringify(subject)\r\n  })\r\n  return await response.json();\r\n}\r\n\r\nexport async function updateSubject( subject: any ){\r\n  const response = await fetch(`${process.env.API_URL}/subjects`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      \"Content-Type\" : \"application/json\"\r\n    },\r\n    body: JSON.stringify(subject)\r\n  })\r\n  return await response.json();\r\n}\r\n\r\nexport async function deleteSubject( SubjectID: string ) {\r\n  const response = await fetch(`${process.env.API_URL}/subjects/${SubjectID}`, {\r\n    method: 'DELETE'\r\n  });\r\n  return await response.json();\r\n}\r\n", "import { useState, useEffect } from \"react\";\r\nimport {useActionData, useLoaderData} from \"@remix-run/react\";\r\n\r\n//Server\r\nimport {createPreviousUser, deleteUser, getUsers, getUsersByID, updateUser} from \"../services/user.server\";\r\nimport { authenticator } from \"../auth/auth.server\";\r\n\r\n//Components\r\nimport User from '../components/user';\r\nimport Spinner from \"../components/spinner\";\r\nimport ModalCodeMessage from \"../components/modalCodeMessage\";\r\nimport ModalCodeShow from \"../components/modalCodeShow\";\r\nimport ModalMessage from \"../components/modalMessage\";\r\n\r\nexport async function loader({ request }: any){\r\n  const currentUser: any = await authenticator.isAuthenticated( request )\r\n  const users = await getUsers();\r\n\r\n  if(currentUser?.AccessLevel === 'N'){\r\n    throw new Error('Acceso no permitido')\r\n  }\r\n\r\n  return {\r\n    currentUser: currentUser,\r\n    users: users.filter( (user: { UserID: any; Name: string | any[]; }) => currentUser.UserID !== user.UserID && user.Name.length > 0)\r\n  }\r\n\r\n}\r\n\r\nexport async function action({ request }: any){\r\n  const form = await request.formData();\r\n  const currentAction = form.get('action');\r\n\r\n  if(currentAction){\r\n    switch ( currentAction ){\r\n      case 'CREATE-USER':\r\n        const token = form.get('Token');\r\n        const accessLevelSelected = form.get('AccessLevel');\r\n\r\n        const result = await createPreviousUser(token, accessLevelSelected);\r\n\r\n        return {\r\n          STATUS: 'CODE-SAVE',\r\n          RESULT: result,\r\n          ERROR: '',\r\n        }\r\n      default:\r\n        throw new Error('Invalid option')\r\n    }\r\n  } else {\r\n    const userID = form.get('UserID');\r\n    switch (request.method) {\r\n      case 'PUT':\r\n        const userInactivated = await getUsersByID(userID)\r\n        const inactivatedUser = {\r\n          UserID: userID,\r\n          State: userInactivated.State === 1 ? 0 : 1,\r\n        }\r\n\r\n        const resultUpdate = await updateUser(inactivatedUser)\r\n        return {\r\n          STATUS: 'USER STATE CHANGE',\r\n          RESULT: resultUpdate,\r\n          ERROR: '',\r\n        }\r\n      case 'DELETE':\r\n        const user = await getUsersByID(userID);\r\n        if(user?.Documents.length > 0\r\n        || user?.Dates.length > 0\r\n        || user?.InternalDocuments.length > 0\r\n        || user?.Subjects.length > 0\r\n        || user?.Clients.length > 0){\r\n          return {\r\n            STATUS: 'USER HAVE DATA',\r\n            RESULT: null,\r\n            ERROR: '',\r\n          }\r\n        }\r\n\r\n        const resultDeleted = await deleteUser(userID);\r\n        return {\r\n          STATUS: 'DELETED',\r\n          RESULT: resultDeleted,\r\n          ERROR: '',\r\n        }\r\n      default:\r\n        throw new Error('Invalid method')\r\n    }\r\n  }\r\n}\r\n\r\nexport default function Usuarios (){\r\n  const [users, setUsers] = useState([]);\r\n  const [userSelected, setUserSelected]: any = useState({})\r\n  const [accessLevelSelected, setAccessLevelSelected] = useState('')\r\n\r\n  //Modal states\r\n  const [addUserStep, setAddUserStep] = useState(0);\r\n  const [errorSelectedMessage, showErrorSelectedMessage] = useState(false);\r\n  const [showMessageAddUser, setShowMessageAddUser] = useState(false);\r\n  const [showMessageDeleteUser, setShowMessageDeleteUser] = useState(false);\r\n  const [showMessageEnableUser, setShowMessageEnableUser] = useState(false);\r\n  const [showMessageUserDeleted, setShowMessageUserDeleted] = useState(false);\r\n  const [showMessageUserHavaData, setShowMessageUserHavaData] = useState(false);\r\n  const [showMessageUserStateChange, setShowMessageUserStateChange] = useState(false);\r\n\r\n  const loader: any = useLoaderData();\r\n  const action: any = useActionData();\r\n\r\n  useEffect(() => {\r\n    switch( action?.STATUS ){\r\n      case 'CODE-SAVE':\r\n        setAddUserStep(0);\r\n        setAccessLevelSelected('');\r\n\r\n        setShowMessageAddUser(true);\r\n        break;\r\n      case 'DELETED':\r\n        setUserSelected({});\r\n\r\n        setShowMessageUserDeleted(true);\r\n        setShowMessageDeleteUser(false);\r\n        break;\r\n      case 'USER HAVE DATA':\r\n        setUserSelected({});\r\n\r\n        setShowMessageDeleteUser(false);\r\n        setShowMessageUserHavaData(true);\r\n        break;\r\n      case 'USER STATE CHANGE':\r\n        setUserSelected({});\r\n\r\n        setShowMessageEnableUser(false);\r\n        setShowMessageUserStateChange(true);\r\n    }\r\n  }, [action]);\r\n\r\n  useEffect(() => {\r\n    setUsers(loader?.users)\r\n  }, [loader]);\r\n\r\n  const showEliminatedClient = () => {\r\n    if(Object.keys(userSelected).length <= 0){\r\n      showErrorSelectedMessage(true)\r\n    } else {\r\n      setShowMessageDeleteUser(true)\r\n    }\r\n  }\r\n\r\n  const showDisableUser = () => {\r\n    if(Object.keys(userSelected).length <= 0){\r\n      showErrorSelectedMessage(true)\r\n    } else {\r\n      setShowMessageEnableUser(true)\r\n    }\r\n  }\r\n\r\n  const searchClient = ( event: any ) => {\r\n    const value = event.target.value.toString().toLowerCase()\r\n    const actualizedUsers = loader?.users?.filter( (user: { Name: string; }) => user.Name.toLowerCase().includes(value) );\r\n    setUsers( actualizedUsers );\r\n  }\r\n\r\n  return (\r\n    <main className='container'>\r\n      { errorSelectedMessage &&\r\n        <ModalMessage\r\n          features={\r\n            {\r\n              text: \"Seleccione un cliente de la lista\",\r\n              isOkCancel: false,\r\n              indexIcon: 0,\r\n              data: null\r\n            }\r\n          }\r\n          setVisibleMessage={ showErrorSelectedMessage }\r\n        />\r\n      }\r\n\r\n      { addUserStep === 1 &&\r\n        <ModalCodeMessage\r\n          currentUser={loader?.currentUser}\r\n          setStep={ setAddUserStep }\r\n          accessLevelSelected={ accessLevelSelected }\r\n          setAccessLevelSelected={ setAccessLevelSelected }\r\n        />\r\n      }\r\n\r\n      { addUserStep === 2 &&\r\n        <ModalCodeShow\r\n          setStep={ setAddUserStep }\r\n          accessLevelSelected={ accessLevelSelected }\r\n        />\r\n      }\r\n\r\n      { showMessageAddUser &&\r\n        <ModalMessage\r\n          features={\r\n            {\r\n              text: \"El c\u00F3digo generado ha sido almacenado exitosamente\",\r\n              isOkCancel: false,\r\n              indexIcon: 2,\r\n              data: null\r\n            }\r\n          }\r\n          setVisibleMessage={ setShowMessageAddUser }\r\n        />\r\n      }\r\n\r\n      { showMessageDeleteUser &&\r\n        <ModalMessage\r\n          features={\r\n            {\r\n              text: \"\u00BFEsta seguro que desea eliminar el usuario seleccionado?\",\r\n              isOkCancel: true,\r\n              indexIcon: 2,\r\n              data: {\r\n                name: 'UserID',\r\n                value: userSelected.UserID\r\n              }\r\n            }\r\n          }\r\n          setVisibleMessage={ setShowMessageDeleteUser }\r\n        />\r\n      }\r\n\r\n      { showMessageEnableUser &&\r\n        <ModalMessage\r\n          features={\r\n            {\r\n              text: `\u00BFEsta seguro que desea ${ userSelected.State === 1 ? 'Inactivar' : 'Activar' } el usuario seleccionado?`,\r\n              isOkCancel: true,\r\n              indexIcon: 2,\r\n              data: {\r\n                method: 'PUT',\r\n                name: 'UserID',\r\n                value: userSelected.UserID\r\n              }\r\n            }\r\n          }\r\n          setVisibleMessage={ setShowMessageEnableUser }\r\n        />\r\n      }\r\n\r\n      { showMessageUserDeleted &&\r\n        <ModalMessage\r\n          features={\r\n            {\r\n              text: \"El usuario ha sido eliminado exitosamente\",\r\n              isOkCancel: false,\r\n              indexIcon: 2,\r\n              data: null\r\n            }\r\n          }\r\n          setVisibleMessage={ setShowMessageUserDeleted }\r\n        />\r\n      }\r\n\r\n\r\n\r\n      { showMessageUserHavaData &&\r\n        <ModalMessage\r\n          features={\r\n            {\r\n              text: \"El usuario no pudo ser eliminado ya que se encontraron datos (documentos, citas, clientes, documentos internos, materias) registrados para este usuario\",\r\n              isOkCancel: false,\r\n              indexIcon: 0,\r\n              data: null\r\n            }\r\n          }\r\n          setVisibleMessage={ setShowMessageUserHavaData }\r\n        />\r\n      }\r\n\r\n      <h1 className=\"heading\">Gestiona los usuarios</h1>\r\n      <p className=\"subheading\">\r\n        Lista completa de los usuarios registrados, puedes escribir y\r\n        filtrar para una b\u00FAsqueda mas r\u00E1pida.\r\n      </p>\r\n\r\n      <div className='top-options'>\r\n        <div className=\"search\">\r\n          <img src=\"/img/search.svg\" alt=\"search\"/>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Buscar\"\r\n            onChange={ (event) => { searchClient( event) } }\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"actions\">\r\n        <button\r\n          className=\"button\"\r\n          onClick={ ()=>{\r\n              setAddUserStep(1)\r\n            }\r\n          }\r\n          type=\"button\"\r\n        >\r\n          <img src=\"/img/add.svg\" alt=\"add\"/>\r\n          <p>Agregar</p>\r\n        </button>\r\n\r\n        <button\r\n          className=\"button\"\r\n          onClick={ ()=>{ showDisableUser() } }\r\n        >\r\n          <img src=\"/img/edit.svg\" alt=\"add\"/>\r\n          <p>Inhabilitar</p>\r\n        </button>\r\n\r\n        <button\r\n          className=\"button\"\r\n          onClick={() => { showEliminatedClient() }}\r\n          type=\"button\"\r\n          value=\"Eliminar\"\r\n        >\r\n          <img src=\"/img/x.svg\" alt=\"add\"/>\r\n          <p>Eliminar</p>\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"list-scroll\">\r\n        {\r\n          users.length > 0\r\n            ?\r\n            users.map( (user: {UserID: number}) =>\r\n              <User\r\n                key = {user.UserID}\r\n                user={user}\r\n                userSelected={userSelected}\r\n                setUserSelected={setUserSelected}\r\n              />\r\n            )\r\n            :\r\n            loader?.users?.length === 0\r\n              ?\r\n              <p className='no-found'>A\u00FAn no hay usuarios registrados</p>\r\n              :\r\n              loader?.users?.length > 0 && users.length === 0\r\n                ?\r\n                <p className='no-found'>No se pudieron encontrar usuarios</p>\r\n                :\r\n                <div className='center'>\r\n                  <Spinner/>\r\n                </div>\r\n        }\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n", "import {Link} from \"@remix-run/react\";\r\n\r\nexport default function User ({ user, userSelected, setUserSelected }: any){\r\n  const { UserID, Name, Email, State, URL } = user\r\n\r\n  return (\r\n    <div className=\"item-list\">\r\n      <Link to={`/usuarios/${URL}`} className=\"item-main\">\r\n        <img src=\"/img/user-circle.svg\" alt=\"user\"/>\r\n        <div className=\"item-information\">\r\n          <h4>{Name}</h4>\r\n          <div>\r\n            <p>{Email}</p>\r\n            <div className='state'>\r\n              <div className={`point ${State === 0 ? '' : 'active'}`}></div>\r\n              <p>{State === 1 ? 'Habilitado' : 'Inhabilitado'}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n\r\n      <img\r\n        className=\"check\"\r\n        src={`/img/${ userSelected.UserID === UserID ? 'square-check.svg' : 'square.svg'}`}\r\n        onClick={()=> { setUserSelected(userSelected.UserID  === UserID ? {} : user) }}\r\n        alt=\"square\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n", "import { useState } from \"react\";\r\n\r\nimport Dropdownlist from \"./dropdownlist\";\r\nimport { accessLevel } from \"../utils/helpers\";\r\n\r\nexport default function ModalCodeMessage ({ currentUser, setStep, accessLevelSelected, setAccessLevelSelected }: any){\r\n  const [error, setError] = useState('')\r\n\r\n\r\n  const validateAccessLevelSelected = () => {\r\n    if( accessLevelSelected === -1) {\r\n      setError('Debe seleccionar el nivel de acceso del usuario');\r\n    } else if( accessLevelSelected === 'A' || accessLevelSelected === 'R' || accessLevelSelected === 'N' ) {\r\n      setStep(2)\r\n    } else {\r\n      setError('El nivel de acceso seleccionado no es valido')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='modal'>\r\n      <div className='message'>\r\n        <img\r\n          src=\"/img/x.svg\"\r\n          className=\"button-close\"\r\n          alt=\"close\"\r\n          onClick={\r\n            ()=> {\r\n              setStep(0)\r\n            }\r\n          }\r\n        />\r\n\r\n        <div className='message-information'>\r\n          <p className='just-text'>\r\n            Para la creaci\u00F3n de un nuevo usuario debera proporcionarle el c\u00F3digo de creaci\u00F3n\r\n            al usuario en cuesti\u00F3n con el cual podr\u00E1 llenar el formulario de registro.\r\n          </p>\r\n\r\n          <div className='inputs'>\r\n            <Dropdownlist\r\n              title='Nivel de acceso otorgado'\r\n              name='user'\r\n              items={ currentUser?.AccessLevel === 'R' ? accessLevel : [accessLevel[0]] }\r\n              error=''\r\n              setItemSelected={ setAccessLevelSelected }\r\n            />\r\n          </div>\r\n\r\n          <p className='error'>{ error }</p>\r\n\r\n          <div className=\"buttons\">\r\n            <input\r\n              className=\"button\"\r\n              type=\"submit\"\r\n              value=\"Aceptar\"\r\n              onClick={ () => { validateAccessLevelSelected() } }\r\n            />\r\n\r\n            <input\r\n              className=\"button\"\r\n              type=\"button\"\r\n              onClick={ () => { setStep(0) } }\r\n              value=\"Cancelar\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n", "export default function Dropdownlist ({ title, name, items = [], error, setItemSelected }: any){\r\n  return (\r\n    <div className=\"input\">\r\n      <label htmlFor={name}>{title}</label>\r\n      <select\r\n        name={name}\r\n        id={name}\r\n        onChange={ (evt) => { setItemSelected(evt.target.value) } }\r\n      >\r\n        { items.length > 0\r\n          ?\r\n          <>\r\n            <option value={-1}>-- Seleccione un elemento --</option>\r\n            {items.map((item: { SubjectID: number; ClientID: number; UserID: number; AccessLevelID: string; Name: string }) =>\r\n              <option\r\n                key={item?.SubjectID || item?.ClientID || item?.UserID || item?.AccessLevelID}\r\n                value={item?.SubjectID || item?.ClientID || item?.UserID || item?.AccessLevelID}\r\n              >\r\n                {item?.Name || 'Name not found'}\r\n              </option>\r\n            )}\r\n          </>\r\n          :\r\n          ''\r\n        }\r\n      </select>\r\n      { error ? <p className=\"error\">{error}</p> : null }\r\n    </div>\r\n  )\r\n}\r\n", "import { useState, useEffect } from \"react\";\r\nimport { Form, useNavigation } from '@remix-run/react'\r\nimport Spinner from \"./spinner\";\r\n\r\nexport default function ModalCodeShow ({ setStep, accessLevelSelected }: any){\r\n  const navigation = useNavigation();\r\n\r\n  const [code, setCode] = useState('000000');\r\n\r\n  function generateRandomCode(length: number) {\r\n    const character = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n    let code = '';\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      const randomCharacter = character[Math.floor(Math.random() * character.length)];\r\n      code += randomCharacter;\r\n    }\r\n    return code;\r\n  }\r\n\r\n  useEffect(() => {\r\n    setCode( generateRandomCode(6) );\r\n  }, []);\r\n\r\n  return (\r\n    <div className='modal'>\r\n      <div className='message'>\r\n        <img\r\n          src=\"/img/x.svg\"\r\n          className=\"button-close\"\r\n          alt=\"close\"\r\n          onClick={\r\n            ()=> {\r\n              setStep(0)\r\n            }\r\n          }\r\n        />\r\n\r\n        <div className='message-information'>\r\n          <p className='just-text'>\r\n            Recuerda no compartir el c\u00F3digo generado con nadie diferente\r\n            al usuario que requiere crear la cuenta.\r\n          </p>\r\n\r\n          <p>El c\u00F3digo generado es el siguiente:</p>\r\n\r\n          <div className='code'>\r\n            <p className='code-letter'>{code[0]}</p>\r\n            <p className='code-letter'>{code[1]}</p>\r\n            <p className='code-letter'>{code[2]}</p>\r\n            <p className='code-letter'>{code[3]}</p>\r\n            <p className='code-letter'>{code[4]}</p>\r\n            <p className='code-letter'>{code[5]}</p>\r\n          </div>\r\n\r\n          <Form method='POST'>\r\n            <input type=\"hidden\" name='action' value='CREATE-USER'/>\r\n            <input type=\"hidden\" name='Token' value={code}/>\r\n            <input type=\"hidden\" name='AccessLevel' value={accessLevelSelected}/>\r\n\r\n            <div className='loading'>\r\n              <input\r\n                className=\"button\"\r\n                type=\"submit\"\r\n                value='Guardar'\r\n              />\r\n              { navigation?.state !== 'idle' &&\r\n                <Spinner/>\r\n              }\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n", "import { useEffect, useState } from \"react\";\r\nimport { useActionData, useNavigate } from '@remix-run/react';\r\n\r\nimport { getUsers, updateUser } from \"../services/user.server\";\r\n\r\nimport EnterCode from '../components/create-account/enter-code';\r\nimport EnterEmail from \"../components/create-account/enter-email\";\r\nimport EnterPassword from \"../components/create-account/enter-password\";\r\n\r\nexport async function action({ request }: any){\r\n  const form = await request.formData();\r\n\r\n  const step = form.get('step');\r\n  let name, email, phone;\r\n\r\n  let error = '';\r\n  switch ( parseInt(step) ){\r\n    case 1:\r\n      const letter0 = form.get('letter0');\r\n      const letter1 = form.get('letter1');\r\n      const letter2 = form.get('letter2');\r\n      const letter3 = form.get('letter3');\r\n      const letter4 = form.get('letter4');\r\n      const letter5 = form.get('letter5');\r\n\r\n      const code = [ letter0, letter1, letter2, letter3, letter4, letter5 ];\r\n\r\n      for( let i = 0; i < 6; i++ ){\r\n        if(code[i]?.length === 0){\r\n          return {\r\n            STATUS: 'ERROR',\r\n            ERROR: 'Todos los d\u00EDgitos son obligatorios'\r\n          }\r\n        }\r\n      }\r\n\r\n      const users = await getUsers();\r\n      const selectedUser = users.filter( (user: { Token: string; }) => user.Token === code.join('') )\r\n\r\n      if( selectedUser.length > 0 ){\r\n        return {\r\n          STATUS: 'VALIDATED',\r\n          DATA: selectedUser[0],\r\n        }\r\n      }\r\n\r\n      return{\r\n        STATUS: 'ERROR',\r\n        ERROR: 'Token no valido'\r\n      }\r\n    case 2:\r\n      name = form.get('name');\r\n      email = form.get('email');\r\n      phone = form.get('phone');\r\n\r\n      if( name.length === 0 ){\r\n        return { ERROR: 'Tu nombre es obligatorio' }\r\n      }\r\n      if( email.length === 0 ){\r\n        return { ERROR: 'El correo electr\u00F3nico es obligatorio' }\r\n      }\r\n      if(phone.length !== 8){\r\n        return { ERROR: 'El n\u00FAmero telef\u00F3nico debe contener 8 caracteres' }\r\n      }\r\n\r\n      if(error.length > 0){\r\n        return {\r\n          STATUS: 'ERROR',\r\n          ERROR: error\r\n        }\r\n      }\r\n\r\n      return {\r\n        STATUS: 'PENDING',\r\n        DATA: {\r\n          Name: name,\r\n          Email: email,\r\n          Phone: phone\r\n        }\r\n      }\r\n    case 3:\r\n      const userID = form.get('UserID');\r\n      name = form.get('name');\r\n      email = form.get('email');\r\n      phone = form.get('phone');\r\n      const password = form.get('password');\r\n      const repeatPassword = form.get('repeat-password');\r\n\r\n      if( password.length === 0 ){\r\n        return { ERROR: 'La contrase\u00F1a es obligatoria' }\r\n      }\r\n      if( password.length < 8 ){\r\n        return { ERROR: 'La contrase\u00F1a debe contener al menos 8 caracteres' }\r\n      }\r\n      if( repeatPassword.length === 0 ){\r\n        return { ERROR: 'Ingresa nuevamente tu contrase\u00F1a' }\r\n      }\r\n      if( repeatPassword.length < 8 ){\r\n        return { ERROR: 'La contrase\u00F1a debe contener al menos 8 caracteres' }\r\n      }\r\n      if( password !== repeatPassword ){\r\n        return { ERROR: 'Las contrase\u00F1as ingresadas no coinciden' }\r\n      }\r\n\r\n      const user = {\r\n        UserID: userID,\r\n        Name: name,\r\n        Email: email,\r\n        Phone: phone,\r\n        Password: password,\r\n        Token: null,\r\n        State: 1,\r\n      }\r\n      try{\r\n        await updateUser(user);\r\n\r\n        return {\r\n          STATUS: 'CREATED'\r\n        }\r\n      } catch( error ) {\r\n        return {\r\n          STATUS: 'ERROR',\r\n          ERROR: 'Error al crear el usuario',\r\n          MESSAGE: error\r\n        }\r\n      }\r\n    default:\r\n      throw new Error('Invalid detected option')\r\n  }\r\n}\r\n\r\nexport default function CreateAccount (){\r\n  const navigate = useNavigate()\r\n  const action: any = useActionData();\r\n\r\n  const [step, setStep] = useState(1);\r\n\r\n  const [userID, setUserID] = useState(-1)\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [repeatPassword, setRepeatPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    switch ( action?.STATUS ){\r\n      case 'VALIDATED':\r\n        setUserID( action?.DATA.UserID );\r\n\r\n        setStep(2);\r\n        break;\r\n      case 'PENDING':\r\n        setName(action?.DATA.Name );\r\n        setEmail(action?.DATA.Email );\r\n        setPhone(action?.DATA.Phone );\r\n\r\n        setStep(3);\r\n        break;\r\n      case 'CREATED':\r\n        navigate('/login');\r\n        break;\r\n    }\r\n  }, [action]);\r\n\r\n  return (\r\n    <main className='login-modal'>\r\n\r\n      { step === 1 &&\r\n        <EnterCode/>\r\n      }\r\n\r\n      { step === 2 &&\r\n        <EnterEmail\r\n          name={name}\r\n          setName={setName}\r\n          email={email}\r\n          setEmail={setEmail}\r\n          phone={phone}\r\n          setPhone={setPhone}\r\n        />\r\n      }\r\n\r\n      { step === 3 &&\r\n        <EnterPassword\r\n          userID={userID}\r\n          name={name}\r\n          email={email}\r\n          phone={phone}\r\n          password={password}\r\n          setPassword={setPassword}\r\n          repeatPassword={repeatPassword}\r\n          setRepeatPassword={setRepeatPassword}\r\n        />\r\n      }\r\n\r\n      <div className='steps'>\r\n        <p className={`step ${step === 1 ? 'active' : ''}`}>1</p>\r\n        <div className='step-line'></div>\r\n        <p className={`step ${step === 2 ? 'active' : ''}`}>2</p>\r\n        <div className='step-line'></div>\r\n        <p className={`step ${step === 3 ? 'active' : ''}`}>2</p>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n", "import React from \"react\";\r\nimport {Link, Form, useNavigation, useActionData} from \"@remix-run/react\";\r\n\r\nimport Spinner from \"../spinner\";\r\n\r\nexport default function EnterCode (){\r\n  const action: any = useActionData();\r\n  const navigation = useNavigation();\r\n\r\n  const inputs: any = [\r\n    React.createRef(),\r\n    React.createRef(),\r\n    React.createRef(),\r\n    React.createRef(),\r\n    React.createRef(),\r\n    React.createRef()\r\n  ];\r\n\r\n  const handleInput = (e: any, index: number) => {\r\n    if(e.target.value.length === e.target.maxLength){\r\n      e.target.value = e.target.value.toString().toUpperCase();\r\n      inputs[index + 1]?.current.focus();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form className='form' method='POST'>\r\n      <h1 className='heading'>Ingresa tu c\u00F3digo de creaci\u00F3n</h1>\r\n      <h2 className='subheading'>\r\n        Para continuar y crear tu cuenta ingresa el c\u00F3digo de creaci\u00F3n de cuenta\r\n        Otorgado por tu administrador.\r\n      </h2>\r\n      <br/>\r\n\r\n      <section className='inputs'>\r\n        <input type=\"hidden\" name='step' value={1}/>\r\n\r\n        <p className='subheading'>C\u00F3digo de creaci\u00F3n</p>\r\n        <div className='code'>\r\n          { inputs.map((input: any, index: number) =>\r\n            <input\r\n              key={index}\r\n              type=\"text\"\r\n              placeholder='-'\r\n              className='code-letter'\r\n              ref={input}\r\n              name={`letter${index}`}\r\n              maxLength={1}\r\n              onChange={(e)=> { handleInput(e, index) }}\r\n            />\r\n          )\r\n          }\r\n        </div>\r\n\r\n        <div className='account-options'>\r\n          <Link to='/login' className='option'>\u00BFYa tienes una cuenta? Inicia sesi\u00F3n</Link>\r\n          <Link to='/forgot-password' className='option'>\u00BFOlvidaste tu contrase\u00F1a? Recuperala</Link>\r\n        </div>\r\n\r\n        <p className='error'>{ action?.ERROR }</p>\r\n\r\n        <div className='loading'>\r\n          <input\r\n            className=\"button\"\r\n            type=\"submit\"\r\n            value='Continuar'\r\n            onClick={ () => {  } }\r\n          />\r\n          { navigation?.state !== 'idle' &&\r\n            <Spinner/>\r\n          }\r\n        </div>\r\n      </section>\r\n    </Form>\r\n  )\r\n}\r\n", "import React from \"react\";\r\nimport {Form, useActionData, useNavigation} from \"@remix-run/react\";\r\n\r\nimport Spinner from \"../spinner\";\r\nimport Input from \"../input\";\r\n\r\nexport default function EnterEmail ({name, setName, email, setEmail, phone, setPhone}: any){\r\n  const action: any = useActionData();\r\n  const navigation = useNavigation();\r\n\r\n  return (\r\n    <Form  className='form' method='POST'>\r\n      <h1 className='heading'>Crea tu nueva cuenta</h1>\r\n      <p className='subheading'>LLena todos los campos para crear tu nueva cuenta</p>\r\n      <br/>\r\n\r\n      <div className='inputs'>\r\n        <input type=\"hidden\" name='step' value='2'/>\r\n\r\n        <Input\r\n          title='Nombre'\r\n          name='name'\r\n          placeholder='Ingresa tu nombre'\r\n          type='text'\r\n          value={name}\r\n          setValue={setName}\r\n          error=''\r\n        />\r\n\r\n        <Input\r\n          title='Correo electr\u00F3nico'\r\n          name='email'\r\n          placeholder='Tu corrreo electr\u00F3nico'\r\n          type='email'\r\n          value={email}\r\n          setValue={setEmail}\r\n          error=''\r\n        />\r\n\r\n        <Input\r\n          title='Numero telefonico'\r\n          name='phone'\r\n          placeholder='Tu numero telefonico'\r\n          type='tel'\r\n          value={phone}\r\n          setValue={setPhone}\r\n          error=''\r\n        />\r\n\r\n        <p className='error'>{ action?.ERROR }</p>\r\n\r\n        <div className='loading'>\r\n          <input className=\"button\" type=\"submit\" value='Continuar'/>\r\n          { navigation?.state !== 'idle' &&\r\n            <Spinner/>\r\n          }\r\n        </div>\r\n      </div>\r\n    </Form>\r\n  )\r\n}\r\n", "import React from \"react\";\r\nimport Input from \"../input\";\r\nimport {Form, useNavigation, useActionData} from \"@remix-run/react\";\r\nimport Spinner from \"../spinner\";\r\n\r\nexport default function EnterPassword ({\r\n   userID, name, email, phone, password, setPassword, repeatPassword, setRepeatPassword\r\n}: any){\r\n  const action: any = useActionData();\r\n  const navigation = useNavigation();\r\n\r\n  return (\r\n    <Form  className='form' method='POST'>\r\n      <h1 className='heading'>Agrega tu contrase\u00F1a</h1>\r\n      <p className='subheading'>Para finalizar de crear tu cuenta agrega una contrase\u00F1a</p>\r\n      <br/>\r\n\r\n      <input type=\"hidden\" name='step' value='3'/>\r\n      <input type=\"hidden\" name='UserID' value={userID}/>\r\n      <input type=\"hidden\" name='name' value={name}/>\r\n      <input type=\"hidden\" name='email' value={email}/>\r\n      <input type=\"hidden\" name='phone' value={phone}/>\r\n\r\n      <div className='inputs'>\r\n        <Input\r\n          title='Contrase\u00F1a'\r\n          name='password'\r\n          placeholder='Ingresa tu contrase\u00F1a'\r\n          type='password'\r\n          value={password}\r\n          setValue={setPassword}\r\n          error=''\r\n        />\r\n\r\n        <Input\r\n          title='Repite la contrase\u00F1a'\r\n          name='repeat-password'\r\n          placeholder='Repite tu contrase\u00F1a'\r\n          type='password'\r\n          value={repeatPassword}\r\n          setValue={setRepeatPassword}\r\n          error=''\r\n        />\r\n\r\n        <p className='error'>{ action?.ERROR }</p>\r\n\r\n        <div className='loading'>\r\n          <input className=\"button\" type=\"submit\" value='Crear cuenta'/>\r\n          { navigation?.state !== 'idle' &&\r\n            <Spinner/>\r\n          }\r\n        </div>\r\n      </div>\r\n    </Form>\r\n  )\r\n}\r\n", "import { useState, useEffect } from \"react\";\nimport { useActionData, useLoaderData } from \"@remix-run/react\";\n\n//Components\nimport Document from \"../components/document\";\nimport ModalMessage from \"../components/modalMessage\";\nimport Spinner from \"../components/spinner\";\n\n//Server Actions\nimport { deleteDocument } from \"../services/document.server\";\nimport { formattedDate } from \"../utils/helpers\";\n\n//Styles\nimport stylesSubject from '../styles/materias.css';\nimport stylesClient from '../styles/clientes.css';\nimport { authenticator } from \"../auth/auth.server\";\nimport { getSubjects } from \"../services/subject.server\";\n\n\nexport function links() {\n  return [\n  {\n    rel: 'stylesheet',\n    href: stylesSubject\n  },\n  {\n    rel: 'stylesheet',\n    href: stylesClient\n  }];\n\n}\n\nexport async function loader({ params, request }: any) {\n  await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/login\"\n  });\n\n  const { name } = params;\n\n  const subjects = await getSubjects();\n  const selectedSubject = subjects.filter((subject: {Name: string;}) => subject.Name === name);\n\n  if (selectedSubject.length === 0) {\n    throw new Error('Nombre de materia no valido');\n  }\n\n  return selectedSubject[0];\n}\n\nexport async function action({ request }: any) {\n  const form = await request.formData();\n  const DocumentID = form.get('DocumentID');\n\n  switch (request.method) {\n    case 'DELETE':\n      const resultData = await deleteDocument(DocumentID);\n      return {\n        status: 'DELETED',\n        data: resultData,\n        errors: {}\n      };\n    default:\n      throw new Error(\"Unexpected action\");\n  }\n}\n\nexport default function MateriasName() {\n  const loader: any = useLoaderData();\n  const actionResult: any = useActionData();\n\n  const [showFormDeletedMessage, setShowFormDeletedMessage] = useState(false);\n  const [showDeletedMessage, setShowDeletedMessage] = useState(false);\n  const [selectedDocument, setSelectedDocument]: any = useState({});\n\n  const { Name, Documents, CreatedDate, UpdatedDate }: any = loader;\n  const [documents, setDocuments] = useState([]);\n\n  useEffect(() => {\n    switch (actionResult?.status) {\n      case 'DELETED':\n        setShowFormDeletedMessage(false);\n        setShowDeletedMessage(true);\n        break;\n      default:\n        break;\n    }\n  }, [actionResult]);\n\n  useEffect(() => {\n    setDocuments(loader?.Documents);\n  }, [loader]);\n\n\n  const searchDocument = (event: any) => {\n    const value = event.target.value.toString().toLowerCase();\n    const actualizedDocuments = loader?.Documents.filter((document: {Name: string;}) => document.Name.toLowerCase().includes(value));\n    setDocuments(actualizedDocuments);\n  };\n\n  return (\n    <div className='container'>\r\n      {showFormDeletedMessage &&\n      <ModalMessage\n        features={\n        {\n          text: \"\u00BFEsta seguro de la eliminaci\u00F3n del documento?\",\n          isOkCancel: true,\n          indexIcon: 1,\n          data: {\n            name: 'DocumentID',\n            value: selectedDocument?.DocumentID\n          }\n        }}\n\n        setVisibleMessage={setShowFormDeletedMessage} />}\n\n      \r\n\r\n      {showDeletedMessage &&\n      <ModalMessage\n        features={\n        {\n          text: \"El documento ha sido eliminado exitosamente\",\n          isOkCancel: false,\n          indexIcon: 2,\n          data: null\n        }}\n\n        setVisibleMessage={setShowDeletedMessage} />}\n\n      \r\n\r\n      <h1 className=\"heading\">Informacion de la materia</h1>\r\n      <h2 className=\"subheading\">\r\n        Gestiona aqui todos los documentos de la materia\r\n      </h2>\r\n\r\n      <main className='grid-1-2'>\r\n        <section className=\"content\">\r\n          <h3>Informaci\u00F3n general</h3>\r\n          <div className=\"data\">\r\n            <div className=\"item\">\r\n              <p>Nombre:</p>\r\n              <b>{Name}</b>\r\n            </div>\r\n\r\n            <div className=\"item\">\r\n              <p>Numero de documentos:</p>\r\n              <b>{Documents.length}</b>\r\n            </div>\r\n\r\n            <div className=\"item\">\r\n              <p>Fecha de creaci\u00F3n:</p>\r\n              <b>{formattedDate(CreatedDate)}</b>\r\n            </div>\r\n\r\n            <div className=\"item\">\r\n              <p>Ultima modificaci\u00F3n:</p>\r\n              <b>{formattedDate(UpdatedDate)}</b>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"documents\">\r\n          <h3 className=\"documents-title\">Documentos registrados</h3>\r\n\r\n          <div className=\"search\">\r\n            <img src=\"/img/search.svg\" alt=\"search\" />\r\n            <input\n              type=\"text\"\n              placeholder=\"Buscar...\"\n              onChange={(event) => {searchDocument(event);}} />\n            \r\n          </div>\r\n\r\n          <div className=\"list-scroll\">\r\n            {\n            Object.keys(loader).length === 0 ?\n\n            <div className='center'>\r\n                  <Spinner />\r\n                </div> :\n\n            documents.length === 0 ?\n\n            <p className=\"no-found\">\r\n                    Aun no hay documentos disponibles...\r\n                  </p> :\n\n            documents.map((document: {DocumentID: number;}) =>\n            <Document\n              key={document.DocumentID}\n              document={document}\n              setSelectedDocument={setSelectedDocument}\n              setShowFormDeletedMessage={setShowFormDeletedMessage} />\n\n            )}\n            \r\n          </div>\r\n        </section>\r\n      </main>\r\n    </div>);\n\n}", "import { useState } from 'react'\r\nimport {Link, useOutletContext} from \"@remix-run/react\";\r\nimport ModalDocument from \"./modalDocument\";\r\n\r\n\r\nexport default function Document ({ document, setSelectedDocument, setShowFormDeletedMessage }: any){\r\n  const { Name, URL } = document\r\n  const [showModalDocument, setShowModalDocument] = useState(false);\r\n  const context: any = useOutletContext();\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      { showModalDocument &&\r\n        <ModalDocument\r\n          URL={URL}\r\n          setShowModalDocument={setShowModalDocument}\r\n        />\r\n      }\r\n\r\n      <div className='item-list'>\r\n        <div className=\"item-main\">\r\n          <img src=\"/img/file-description.svg\" alt=\"user\"/>\r\n          <div className='item-information' onClick={() => { setShowModalDocument(true) }}>\r\n            <h4>{Name}</h4>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='actions'>\r\n          <Link to={`${context.URL_API}/document/download/${URL}`}>\r\n            <img\r\n              src='/img/download.svg'\r\n              alt=\"square\"\r\n            />\r\n          </Link>\r\n          <img\r\n            onClick={ () => {\r\n                setSelectedDocument(document)\r\n                setShowFormDeletedMessage(true)\r\n              }\r\n            }\r\n            src=\"/img/trash.svg\"\r\n            alt=\"trash\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n", "import { useEffect, useState } from \"react\";\nimport { useActionData, useLoaderData } from \"@remix-run/react\";\n\n//Components\nimport SelectSubject from \"../components/selectSubject\";\nimport FormDocument from \"../components/formDocument\";\nimport ModalMessage from \"../components/modalMessage\";\n\n//Server actions\nimport { addDocument, deleteDocument } from \"../services/document.server\";\nimport { getSubjects } from \"../services/subject.server\";\nimport { getClients } from \"../services/client.server\";\nimport { authenticator } from \"../auth/auth.server\";\n\n//Styles\nimport styles from \"../styles/clientes.css\";\n\nexport function links() {\n  return [\n  {\n    rel: 'stylesheet',\n    href: styles\n  }];\n\n}\n\n\nexport async function loader({ params, request }: any) {\n  const currentUser = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/login\"\n  });\n\n  const { URL } = params;\n  const clients = await getClients();\n  const client = clients.filter((value: {URL: any;}) => value.URL === URL);\n  if (client.length === 0) {\n    throw new Error('Cliente no encontrado');\n  }\n\n  const subjects = await getSubjects();\n  return {\n    client,\n    subjects,\n    currentUser\n  };\n}\n\nexport async function action({ request }: any) {\n  const documentFormData = await request.formData();\n  const documentID = documentFormData.get('DocumentID');\n  const name = documentFormData.get('Name');\n  const subject = documentFormData.get('Subject');\n  const file = documentFormData.get('File');\n\n  const errors: any = {};\n  if (request.method === 'POST') {\n    if (name.length === 0) {\n      errors.name = 'El titulo del documento es obligatorio';\n    }\n    if (name.length > 30) {\n      errors.name = 'El titulo del documento no debe exceder las 30 letras';\n    }\n    if (parseInt(subject) === -1) {\n      errors.subject = 'La selecci\u00F3n de una materia es obligatoria';\n    }\n    if (!file) {\n      errors.file = 'debe seleccionar un documento';\n    }\n  }\n\n  if (Object.keys(errors).length > 0) {\n    return {\n      state: 'ERROR',\n      data: null,\n      errors: errors\n    };\n  }\n\n  switch (request.method) {\n    case 'POST':{\n        try {\n          const returnedDocument = await addDocument(documentFormData);\n          return {\n            state: 'INSERTED',\n            data: returnedDocument,\n            errors: {}\n          };\n        } catch (error) {\n          return {\n            state: 'ERROR',\n            data: null,\n            errors: {}\n          };\n        }\n\n\n      }\n    case 'DELETE':{\n        const returnedState = await deleteDocument(documentID);\n        return {\n          state: 'DELETED',\n          data: returnedState,\n          errors: {}\n        };\n      }\n    default:{\n        throw new Error(\"Unexpected action\");\n      }\n  }\n}\n\nexport default function ClientesClientID() {\n\n  const { client, subjects, currentUser }: any = useLoaderData();\n  const actionResult: any = useActionData();\n  const { ClientID, Name, Identity, Email, Phone, Address, Documents } = client[0];\n\n  const [showSubject, setShowSubject] = useState(false);\n\n  const [showInsertedMessage, setShowInsertedMessage] = useState(false);\n  const [showDeletedMessage, setShowDeletedMessage] = useState(false);\n  const [showFormDocument, setShowFormDocument] = useState(false);\n  const [showFormDeletedMessage, setShowFormDeletedMessage] = useState(false);\n\n  const [selectedDocument, setSelectedDocument]: any = useState({});\n\n  const subjectsNamed: any = {};\n  subjects.forEach((subject: {SubjectID: string | number;Name: any;}) => {\n    subjectsNamed[subject.SubjectID] = subject.Name;\n  });\n\n  let record: any = [];\n  Documents.forEach((document: {Subject: string | number;}) => {\n    let subjectExist = false;\n    record.forEach((item: {SubjectID: string | number;Documents: any[];}) => {\n      if (document?.Subject === item.SubjectID) {\n        item.Documents = [...item.Documents, document];\n        subjectExist = true;\n      }\n    });\n    if (!subjectExist) {\n      record.push({\n        SubjectID: document?.Subject,\n        Name: subjectsNamed[document?.Subject],\n        Documents: [document]\n      });\n    }\n  });\n\n  useEffect(() => {\n    switch (actionResult?.state) {\n      case 'INSERTED':\n        setShowFormDocument(false);\n        setShowInsertedMessage(true);\n        break;\n      case 'DELETED':\n        setShowFormDeletedMessage(false);\n        setShowDeletedMessage(true);\n        break;\n      default:\n        break;\n    }\n  }, [actionResult]);\n\n  return (\n    <div className=\"container\">\r\n      {showFormDocument &&\n      <FormDocument\n        method={'POST'}\n        errors={actionResult?.errors}\n        subjects={subjects}\n        ClientID={ClientID}\n        UserID={currentUser?.UserID}\n        setShowModalDocument={setShowFormDocument} />}\n\n      \r\n\r\n      {showFormDeletedMessage &&\n      <ModalMessage\n        features={\n        {\n          text: \"\u00BFEsta seguro de la eliminaci\u00F3n del documento?\",\n          isOkCancel: true,\n          indexIcon: 1,\n          data: {\n            name: 'DocumentID',\n            value: selectedDocument?.DocumentID\n          }\n        }}\n\n        setVisibleMessage={setShowFormDeletedMessage} />}\n\n      \r\n\r\n      {showInsertedMessage &&\n      <ModalMessage\n        features={\n        {\n          text: \"El documento ha sido agregado exitosamente\",\n          isOkCancel: false,\n          indexIcon: 2,\n          data: null\n        }}\n\n        setVisibleMessage={setShowInsertedMessage} />}\n\n      \r\n\r\n      {showDeletedMessage &&\n      <ModalMessage\n        features={\n        {\n          text: \"El documento ha sido eliminado exitosamente\",\n          isOkCancel: false,\n          indexIcon: 2,\n          data: null\n        }}\n\n        setVisibleMessage={setShowDeletedMessage} />}\n\n      \r\n\r\n      <h1 className=\"heading\">Informaci\u00F3n del cliente</h1>\r\n      <h2 className=\"subheading\">Informaci\u00F3n general y expediente completo del cliente</h2>\r\n\r\n      <main className=\"grid-1-2\">\r\n        <section className=\"content\">\r\n          <h3>Informaci\u00F3n general</h3>\r\n          <div className=\"data\">\r\n              <div className=\"item\">\r\n                <p>Nombre:</p>\r\n                <b>{Name}</b>\r\n              </div>\r\n              <div className=\"item\">\r\n                <p>Identidad:</p>\r\n                <b>{Identity}</b>\r\n              </div>\r\n              <div className=\"item\">\r\n                <p>Correo Electr\u00F3nico:</p>\r\n                <b>{Email}</b>\r\n              </div>\r\n              <div className=\"item\">\r\n                <p>Telef\u00F3no:</p>\r\n                <b>{Phone}</b>\r\n              </div>\r\n              <div className=\"item\">\r\n                <p>Direcci\u00F3n:</p>\r\n                <b>{Address}</b>\r\n              </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"record\">\r\n          <h3 className=\"record-title\">Expediente</h3>\r\n\r\n          <div className=\"actions\">\r\n            <button\n              className=\"button\"\n              onClick={() => {setShowFormDocument(true);}}\n              type=\"button\">\n              \r\n              <img src=\"/img/add.svg\" alt=\"add\" />\r\n              <p>Agregar documento</p>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"list-scroll\">\r\n            {record.length === 0 ?\n\n            <p className=\"no-found\">\r\n                  Aun no hay documentos disponibles...\r\n                </p> :\n\n            record.map((subject: {SubjectID: number;}) =>\n            <SelectSubject\n              key={subject.SubjectID}\n              subject={subject}\n              showSubject={showSubject}\n              setShowSubject={setShowSubject}\n              setShowFormDeletedMessage={setShowFormDeletedMessage}\n              setSelectedDocument={setSelectedDocument} />\n\n            )}\n            \r\n          </div>\r\n        </section>\r\n      </main>\r\n    </div>);\n\n}", "import { useState } from 'react'\r\nimport ModalDocument from \"./modalDocument\";\r\nimport {Link, useOutletContext} from \"@remix-run/react\";\r\n\r\nexport default function SelectDocument  ({ document, setShowFormDeletedMessage, setSelectedDocument }: any){\r\n\r\n  const { Name, URL } = document\r\n\r\n  const [showModalDocument, setShowModalDocument] = useState(false);\r\n\r\n  const context: any = useOutletContext();\r\n\r\n  return (\r\n    <div className='subject-document'>\r\n      { showModalDocument &&\r\n        <ModalDocument\r\n          URL={URL}\r\n          setShowModalDocument={ setShowModalDocument }\r\n        />\r\n      }\r\n\r\n      <div\r\n        className=\"record-document\"\r\n      >\r\n        <p onClick={ () => { setShowModalDocument(true) } }>{ Name }</p>\r\n        <p className='actions'>\r\n          <Link to={`${context.URL_API}/documents/download/${URL}`}>\r\n            <img\r\n              src='/img/download.svg'\r\n              alt=\"trash\"\r\n            />\r\n          </Link>\r\n          <img\r\n            onClick={ () => {\r\n                setSelectedDocument(document)\r\n                setShowFormDeletedMessage(true)\r\n              }\r\n            }\r\n            src=\"/img/trash.svg\" alt=\"trash\"\r\n          />\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n", "import SelectDocument from \"./selectDocument\";\r\n\r\nexport default function SelectSubject ({ subject, showSubject, setShowSubject, setShowFormDeletedMessage, setSelectedDocument }: any){\r\n  const {SubjectID, Name, Documents } = subject\r\n\r\n  return (\r\n    <div className=\"record-subject\">\r\n      <div\r\n        className=\"subject-information\"\r\n        onClick={ () => { setShowSubject( showSubject === SubjectID ? 0 : SubjectID ) } }\r\n      >\r\n        <p>\r\n          { Name }\r\n        </p>\r\n\r\n        <div>\r\n          <img\r\n            className={showSubject === SubjectID ? 'active' : ''}\r\n            src={`/img/chevron-down.svg`}\r\n            alt=\"arrow\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className={`subject-documents ${ showSubject === SubjectID ? 'active' : '' }`}>\r\n        { Documents?.length > 0 ?\r\n          Documents.map( (document: { DocumentID: number }) =>\r\n            <SelectDocument\r\n              key={document.DocumentID}\r\n              document={document}\r\n              setSelectedDocument={setSelectedDocument}\r\n              setShowFormDeletedMessage={setShowFormDeletedMessage}\r\n            />\r\n          )\r\n          :\r\n          <div className='subject-document'>\r\n            <div className=\"record-document\">\r\n              <p>Aun no hay documentos disponibles</p>\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n", "import {Form, useNavigation} from \"@remix-run/react\";\r\n\r\nimport Spinner from \"./spinner\";\r\nimport CloseButton from \"./close_button\";\r\nimport { Key, ReactElement, JSXElementConstructor, ReactNode, ReactPortal } from \"react\";\r\n\r\nexport default function FormDocument ({ method, errors, subjects, ClientID, UserID, setShowModalDocument }: any){\r\n  const navigation = useNavigation()\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <Form className=\"form\" method={method} encType=\"multipart/form-data\">\r\n        <CloseButton\r\n          setVisibleForm={setShowModalDocument}\r\n        />\r\n\r\n        <h1 className=\"heading\">Agregar nuevo documento</h1>\r\n        <h2 className=\"subheading\">Agrega toda la informaci\u00F3n sobre el documento para agregarlo al expediente</h2><br/>\r\n\r\n        <div className=\"inputs\">\r\n          <div className=\"input\">\r\n            <input name='Client' type=\"hidden\" value={ClientID}/>\r\n            <input name='User' type=\"hidden\" value={UserID}/>\r\n\r\n            <label htmlFor=\"title\">Titulo</label>\r\n            <input\r\n              name='Name'\r\n              id='title'\r\n              type=\"text\"\r\n              placeholder='Escriba el titulo del documento...'\r\n            />\r\n            { errors?.name ? <p className=\"error\">{errors.name}</p> : null }\r\n          </div>\r\n\r\n          <div className=\"input\">\r\n            <label htmlFor=\"subject\">Materia</label>\r\n            <select\r\n              name=\"Subject\"\r\n              id=\"subject\"\r\n            >\r\n              { subjects.length > 0\r\n                ?\r\n                <>\r\n                <option value={-1}>-- Seleccione una materia --</option>\r\n                {subjects.map((item: { SubjectID: number, Name: string }) =>\r\n                  <option key={item.SubjectID} value={item.SubjectID}>{item.Name}</option>\r\n                )}\r\n                </>\r\n                :\r\n                ''\r\n              }\r\n            </select>\r\n            { errors?.subject ? <p className=\"error\">{errors.subject}</p> : null }\r\n          </div>\r\n\r\n          <div className=\"input\">\r\n            <label htmlFor=\"file\">Archivo</label>\r\n            <input\r\n              type=\"file\"\r\n              name=\"File\"\r\n              id=\"file\"\r\n            />\r\n            { errors?.file ? <p className=\"error\">{errors.file}</p> : null }\r\n          </div>\r\n        </div>\r\n\r\n        <div className='loading'>\r\n          <input className=\"button\" type=\"submit\" value='Guardar'/>\r\n          { navigation?.state !== 'idle' &&\r\n            <Spinner/>\r\n          }\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n", "import { useState } from \"react\";\nimport { useLoaderData } from \"@remix-run/react\";\n\n//Components\nimport Select from \"../components/select\";\n\n//Server actions\nimport { getClients } from \"../services/client.server\";\nimport { getUsers } from \"../services/user.server\";\n\n//Styles\nimport styles from \"../styles/clientes.css\";\n\n\nexport function links() {\n  return [\n  {\n    rel: 'stylesheet',\n    href: styles\n  }];\n\n}\n\nexport async function loader({ params }: any) {\n  const { URL } = params;\n  const users = await getUsers();\n  const selectedUser = users.filter((user: {URL: string;}) => user.URL === URL)[0];\n  const clients = await getClients();\n  return {\n    Clients: clients.filter((client: {User: {UserID: number;};}) => client.User.UserID === selectedUser.UserID),\n    User: selectedUser\n  };\n}\n\nexport default function UsuariosURL() {\n  const [showClients, setShowClients] = useState();\n  const [showDocuments, setShowDocuments] = useState();\n\n  const loader: any = useLoaderData();\n\n  const { Name, Email, Phone, State, AccessLevel, Clients, Documents } = loader?.User;\n\n  const accessLevel: any = {\n    'A': 'Usuario administrador',\n    'R': 'Usuario ra\u00EDz',\n    'N': 'Usuario com\u00FAn'\n  };\n\n\n  return (\n    <div className='container'>\r\n      <h1 className='heading'>Informaci\u00F3n del usuario</h1>\r\n      <h2 className='subheading'>Informaci\u00F3n general y otros datos sobre el usuario</h2>\r\n\r\n      <main className='grid-1-2'>\r\n        <section className=\"content\">\r\n          <h3>Informaci\u00F3n general</h3>\r\n          <div className=\"data\">\r\n            <div className=\"item\">\r\n              <p>Nombre:</p>\r\n              <b>{Name}</b>\r\n            </div>\r\n            <div className=\"item\">\r\n              <p>Correo Electr\u00F3nico:</p>\r\n              <b>{Email}</b>\r\n            </div>\r\n            <div className=\"item\">\r\n              <p>Tel\u00E9fono:</p>\r\n              <b>{Phone}</b>\r\n            </div>\r\n            <div className=\"item\">\r\n              <p>Nivel del acceso:</p>\r\n              <b>{accessLevel[AccessLevel]}</b>\r\n            </div>\r\n            <div className=\"item\">\r\n              <p>Estado actual:</p>\r\n              <div className='state'>\r\n                <div className={`point ${State === 1 ? 'active' : ''}`}></div>\r\n                <b>{State === 1 ? 'Habilitado' : 'Inhabilitado'}</b>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section className='record'>\r\n          <h3 className='record-title users'>Otra informaci\u00F3n</h3>\r\n\r\n          <div className='list-scroll'>\r\n            <Select\n              id={1}\n              title={'Clientes'}\n              items={Clients}\n              urlPrefix={'clientes'}\n              showSelect={showClients}\n              setShowSelect={setShowClients} />\n            \r\n\r\n            <Select\n              id={2}\n              title={'Documentos'}\n              items={Documents}\n              type='BUTTON'\n              urlPrefix={'documentos'}\n              showSelect={showDocuments}\n              setShowSelect={setShowDocuments} />\n            \r\n          </div>\r\n        </section>\r\n      </main>\r\n    </div>);\n\n}", "import {Link} from \"@remix-run/react\";\r\nimport ModalDocument from \"./modalDocument\";\r\n\r\nexport default function SelectItem ({ title, type = 'URL' , url = '', onClick, when, setWhen}: any){\r\n\r\n\r\n  return (\r\n    <>\r\n      { when &&\r\n        <ModalDocument\r\n          URL={url}\r\n          setShowModalDocument={ setWhen }\r\n        />\r\n      }\r\n\r\n      <div className='subject-document'>\r\n        <div\r\n          className=\"record-document\"\r\n        >\r\n          <p onClick={ onClick }>{ title }</p>\r\n          <p className='actions'>\r\n            { type === 'URL' &&\r\n              <Link to={url}>\r\n                <img\r\n                  src='/img/go.svg'\r\n                  alt=\"go\"\r\n                />\r\n              </Link>\r\n            }\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n", "import SelectItem from \"./select-item\";\r\n\r\nexport default function Select ({ id, title, items = [], urlPrefix, type, showSelect, setShowSelect }: any){\r\n  return (\r\n    <div className='record-subject'>\r\n      <div\r\n        className=\"subject-information\"\r\n        onClick={ () => { setShowSelect( showSelect === id ? 0 : id ) } }\r\n      >\r\n        <p>\r\n          { title }\r\n        </p>\r\n\r\n        <div>\r\n          <img\r\n            className={showSelect === id ? 'active' : ''}\r\n            src={`/img/chevron-down.svg`}\r\n            alt=\"arrow\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className={`subject-documents ${ showSelect === id ? 'active' : '' }`}>\r\n        { items?.length > 0 ?\r\n          items.map( (item: { ClientID: number; DocumentID: number; Name: string; URL: string; }) =>\r\n            <SelectItem\r\n              key={ item.ClientID || item.DocumentID }\r\n              title={ item.Name }\r\n              type={type}\r\n              url={ item.DocumentID ? item.URL : `/${urlPrefix}/${item.URL}` }\r\n            />\r\n          )\r\n          :\r\n          <div className='subject-document'>\r\n            <div className=\"record-document\">\r\n              <p>Aun no hay elementos disponibles</p>\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n", "import { useEffect, useState } from \"react\";\nimport { useActionData, useLoaderData } from \"@remix-run/react\";\n\nimport { addDate, getAllDates, updateDate, deleteDate } from \"../services/date.server\";\n\nimport FormDate from \"../components/formDate\";\nimport ComponentDate from '../components/date';\nimport ModalMessage from \"../components/modalMessage\";\nimport dateStyles from '../styles/citas.css';\nimport { getClients } from \"../services/client.server\";\nimport { getUsers } from \"../services/user.server\";\nimport { authenticator } from \"../auth/auth.server\";\n\nexport function links() {\n  return [\n  {\n    rel: 'stylesheet',\n    href: dateStyles\n  }];\n\n}\n\nexport async function loader({ request }: any) {\n  const currentUser: any = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/login\"\n  });\n\n  const clients = await getClients();\n  const users = await getUsers();\n  let dates: any = await getAllDates();\n\n  if (currentUser?.AccessLevel === 'N') {\n    dates = dates.filter((date: {User: {UserID: any;};}) => date.User.UserID === currentUser.UserID);\n  }\n\n  return {\n    clients,\n    users,\n    dates,\n    currentUser\n  };\n}\n\nexport async function action({ request }: any) {\n  const currentUser: any = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/login\"\n  });\n\n  const form = await request.formData();\n  const issue = form.get('issue');\n  const user = form.get('user');\n  const client = form.get('client');\n  const formDateTime = form.get('datetime');\n  const datetime = new Date(formDateTime);\n\n  const errors: any = {};\n  if (request.method === 'POST') {\n    if (issue.length === 0) {\n      errors.issue = 'Es necesario agregar un asunto a la cita';\n    }\n    if (currentUser.AccessLevel === 'A' || currentUser.AccessLevel === 'R') {\n      if (parseInt(user) === -1) {\n        errors.user = 'Debe seleccionar un usuario';\n      }\n    }\n    if (parseInt(client) === -1) {\n      errors.client = 'Debe seleccionar un cliente';\n    }\n    if (datetime < new Date()) {\n      errors.datetime = 'La fecha seleccionada no puede ser menor que la fecha actual';\n    }\n  }\n\n  if (Object.keys(errors).length > 0) {\n    return { STATUS: 'ERROR', ERRORS: errors };\n  }\n\n  switch (request.method) {\n    case 'POST':\n      const insertedDate = {\n        Issue: issue,\n        User: user,\n        Client: client,\n        DateTime: datetime,\n        State: 'P'\n      };\n\n      const resultDate = await addDate(insertedDate);\n\n      return {\n        STATUS: 'INSERTED',\n        DATA: resultDate\n      };\n    case 'PUT':\n      const dateID = form.get('DateID');\n      const currentState = form.get('State');\n\n      const updatedDate = {\n        DateID: dateID,\n        State: currentState === 'P' ? 'R' : 'P'\n      };\n\n      const updateResultDate = await updateDate(updatedDate);\n\n      return {\n        STATUS: 'UPDATED',\n        DATA: updateResultDate\n      };\n    case 'DELETE':\n      const DateID = form.get('DateID');\n\n      const deleteResult = await deleteDate(DateID);\n      return {\n        STATUS: 'DELETED',\n        DATA: deleteResult\n      };\n    default:\n      throw new Error('Invalid option');\n  }\n}\n\nexport default function Citas() {\n  const action: any = useActionData();\n  const loader: any = useLoaderData();\n\n  //Modals states\n  const [showInsertedMessage, setShowInsertedMessage] = useState(false);\n  const [showUpdatedMessage, setShowUpdatedMessage] = useState(false);\n  const [showFormDate, setShowFormDate] = useState(false);\n  const [showDeleteMessage, setShowDeleteMessage] = useState(false);\n  const [showDeletedMessage, setShowDeletedMessage] = useState(false);\n  const [showErrorDeleteMessage, setShowErrorDeleteMessage] = useState(false);\n\n  //Filter states\n  const [dateType, setDateType] = useState('');\n  const [dateTime, setDateTime] = useState(getCurrentDate());\n  const [issue, setIssue] = useState('');\n\n  const [selectedDate, setSelectedDate]: any = useState({});\n  const [dates, setDates] = useState([]);\n\n  useEffect(() => {\n    switch (action?.STATUS) {\n      case 'INSERTED':\n        setShowFormDate(false);\n        setShowInsertedMessage(true);\n        break;\n      case 'UPDATED':\n        setShowUpdatedMessage(true);\n        break;\n      case 'DELETED':\n        setShowDeleteMessage(false);\n        setShowDeletedMessage(true);\n        break;\n    }\n  }, [action]);\n\n  useEffect(() => {\n    setDates(loader?.dates);\n  }, [loader]);\n\n  useEffect(() => {\n    if (dateType.length > 0) {\n      setDates(loader?.dates.filter((date: {State: string;DateTime: string;Issue: string;}) => {\n        return date.State === dateType && date.DateTime.split('T')[0] === dateTime && date.Issue.toLowerCase().includes(issue);\n      }));\n    } else {\n      setDates(loader?.dates.filter((date: {DateTime: string;}) => date.DateTime.split('T')[0] === dateTime));\n    }\n  }, [dateType, dateTime, issue, loader?.dates]);\n\n  function getCurrentDate() {\n    const currentDate = new Date();\n    return currentDate.toISOString().split('T')[0];\n  }\n\n  function showEliminatedDate() {\n    if (Object.keys(selectedDate).length === 0 || !selectedDate?.DateID) {\n      setShowErrorDeleteMessage(true);\n    } else {\n      setShowDeleteMessage(true);\n    }\n  }\n\n  return (\n    <>\r\n      {showFormDate &&\n      <FormDate\n        currentUser={loader?.currentUser.AccessLevel !== 'N' ? null : loader?.currentUser}\n        clients={loader?.clients}\n        users={loader?.users}\n        setShowFormDate={setShowFormDate}\n        errors={action?.ERRORS} />}\n\n      \r\n\r\n      {showInsertedMessage &&\n      <ModalMessage\n        features={{\n          text: \"La cita ha sido agregada exitosamente\",\n          isOkCancel: false,\n          indexIcon: 2,\n          data: null\n        }}\n        setVisibleMessage={setShowInsertedMessage} />}\n\n      \r\n\r\n      {showDeleteMessage &&\n      <ModalMessage\n        features={\n        {\n          text: \"\u00BFEsta seguro de la eliminaci\u00F3n del cliente?\",\n          isOkCancel: true,\n          indexIcon: 1,\n          data: {\n            name: 'DateID',\n            value: selectedDate?.DateID\n          }\n        }}\n\n        setVisibleMessage={setShowDeleteMessage} />}\n\n      \r\n\r\n      {showDeletedMessage &&\n      <ModalMessage\n        features={{\n          text: \"La cita ha sido eliminada exitosamente\",\n          isOkCancel: false,\n          indexIcon: 2,\n          data: null\n        }}\n        setVisibleMessage={setShowDeletedMessage} />}\n\n      \r\n\r\n      {showErrorDeleteMessage &&\n      <ModalMessage\n        features={{\n          text: \"Debe seleccionar una cita para ser eliminada\",\n          isOkCancel: false,\n          indexIcon: 1,\n          data: null\n        }}\n        setVisibleMessage={setShowErrorDeleteMessage} />}\n\n      \r\n\r\n      <div className='container'>\r\n        <h1 className='heading'>Citas</h1>\r\n        <p className='subheading'>Aqu\u00ED veras todas las citas tanto pendientes como las realizadas anteriormente</p>\r\n\r\n        <div className='top-options'>\r\n          <div className=\"search\">\r\n            <img src=\"/img/search.svg\" alt=\"search\" />\r\n            <input\n              type=\"text\"\n              placeholder=\"Buscar\"\n              value={issue}\n              onChange={(event) => {setIssue(event.target.value);}} />\n            \r\n          </div>\r\n\r\n          <div className='input'>\r\n            <select name=\"state\" id=\"state\" onChange={\n            (evt) => {\n              setDateType(evt.target.value);\n            }}>\r\n              <option value=\"\">-- Todas las citas --</option>\r\n              <option value=\"P\">Pendiente</option>\r\n              <option value=\"R\">Realizada</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className='input'>\r\n            <input type=\"date\" value={dateTime.toString()} onChange={(evt) => {\n              setDateTime(evt.target.value);\n            }} />\n            \r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"actions\">\r\n          <button\n            className=\"button\"\n            onClick={() => {setShowFormDate(true);}}\n            type=\"button\">\n            \r\n            <img src=\"/img/add.svg\" alt=\"add\" />\r\n            <p>Agregar</p>\r\n          </button>\r\n\r\n          <button\n            className=\"button\"\n            onClick={() => {showEliminatedDate();}}\n            type=\"button\"\n            value=\"Eliminar\">\n            \r\n            <img src=\"/img/x.svg\" alt=\"add\" />\r\n            <p>Eliminar</p>\r\n          </button>\r\n        </div>\r\n\r\n        {dates.length > 0 ?\n\n        <section className='dates'>\r\n              {\n          dates.map((date, index) =>\n          <ComponentDate\n            key={index}\n            date={date}\n            selectedDate={selectedDate}\n            setSelectedDate={setSelectedDate} />\n\n          )}\n          \r\n            </section> :\n\n        loader?.dates.length > 0 ?\n\n        <p className='no-found'>No se encontraron citas</p> :\n\n        <p className='no-found'>Aun no hay citas registradas</p>}\n        \r\n      </div>\r\n    </>);\n\n}", "export async function getAllDates(){\r\n  const response = await fetch(`${process.env.API_URL}/dates`)\r\n  return await response.json();\r\n}\r\n\r\nexport async function addDate( date: any ){\r\n  const response = await fetch(`${process.env.API_URL}/dates`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\" : \"application/json\"\r\n    },\r\n    body: JSON.stringify(date)\r\n  });\r\n  return await response.json();\r\n}\r\n\r\nexport async function updateDate( date: any ){\r\n  const response = await fetch(`${process.env.API_URL}/dates`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\" : \"application/json\"\r\n    },\r\n    body: JSON.stringify(date)\r\n  });\r\n  return await response.json();\r\n}\r\n\r\nexport async function deleteDate( DateID: any ){\r\n  const response = await fetch(`${process.env.API_URL}/dates/${DateID}`, {\r\n    method: \"DELETE\"\r\n  });\r\n  return await response.json();\r\n}\r\n", "import { useState } from \"react\";\r\nimport {Form, useNavigation} from \"@remix-run/react\";\r\n\r\nimport CloseButton from \"./close_button\";\r\nimport Input from \"./input\";\r\nimport Dropdownlist from \"./dropdownlist\";\r\nimport Spinner from \"./spinner\";\r\n\r\nexport default function FormDate ({ currentUser = null, date = {}, clients = [], users = [], errors = {}, setShowFormDate}: any){\r\n  const dateID = date?.DateID;\r\n  const [issue, setIssue] = useState('');\r\n  const [datetime, setDatetime] = useState(new Date());\r\n\r\n  const navigation = useNavigation()\r\n  return (\r\n    <div className='modal'>\r\n      <Form action=\"\" method='post' className='form'>\r\n        <CloseButton\r\n          setVisibleForm={setShowFormDate}\r\n        />\r\n\r\n        <h1 className='heading'>Agregar nueva cita</h1>\r\n        <p className='subheading'>Agregue todos los datos para agendar una nueva cita</p>\r\n        <br/>\r\n\r\n        <div className='inputs'>\r\n          <input type=\"hidden\" value={dateID} name='DateID'/>\r\n\r\n          <Input\r\n            title='Asunto'\r\n            name='issue'\r\n            type='text'\r\n            placeholder='Asunto de la cita'\r\n            value={issue}\r\n            setValue={setIssue}\r\n            error={errors?.issue}\r\n          />\r\n\r\n          { currentUser !== null\r\n            ?\r\n              <input type=\"hidden\" name='user' value={currentUser.UserID}/>\r\n            :\r\n              <Dropdownlist\r\n                title='Abogado a cargo'\r\n                name='user'\r\n                items={users}\r\n                error={errors?.user}\r\n              />\r\n          }\r\n\r\n          <Dropdownlist\r\n            title='Cliente'\r\n            name='client'\r\n            items={clients}\r\n            error={errors?.client}\r\n          />\r\n\r\n          <Input\r\n            title='Fecha y hora'\r\n            name='datetime'\r\n            type='datetime-local'\r\n            value={datetime}\r\n            setValue={setDatetime}\r\n            error={errors?.datetime}\r\n          />\r\n        </div>\r\n\r\n        <div className='loading'>\r\n          <input type=\"submit\" className='button' value='Guardar'/>\r\n          { navigation?.state !== 'idle' &&\r\n            <Spinner/>\r\n          }\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n", "import { Form } from '@remix-run/react';\r\nimport {formattedDate} from \"../utils/helpers\";\r\n\r\nexport default function Date ({ date, selectedDate, setSelectedDate }: any){\r\n  const { DateID, Issue, DateTime, User, Client, State } = date\r\n  return (\r\n    <div\r\n      className={`date ${selectedDate.DateID === DateID ? 'active' : ''}`}\r\n      onClick={ () => { setSelectedDate( date?.DateID === selectedDate?.DateID ? {} : date) } }\r\n    >\r\n      <div>\r\n        <div className='date-issue'>\r\n          <span>Asunto</span>\r\n          <p>{ Issue }</p>\r\n        </div>\r\n\r\n        <div className='information'>\r\n          <div className='information-item'>\r\n            <span>Encargado</span>\r\n            <p>{User?.Name}</p>\r\n          </div>\r\n\r\n          <div className='information-item'>\r\n            <span>Cliente</span>\r\n            <p>{Client?.Name}</p>\r\n          </div>\r\n\r\n          <div className='information-item'>\r\n            <span>Fecha</span>\r\n            <p>{ formattedDate(DateTime).split(',')[0] }</p>\r\n          </div>\r\n\r\n          <div className='information-item'>\r\n            <span>Hora</span>\r\n            <p>{ formattedDate(DateTime).split(',')[1] }</p>\r\n          </div>\r\n\r\n          <div className='information-item'>\r\n            <span>Estado actual</span>\r\n            <div className='state'>\r\n              <div className={`point ${State === 'P' ? '' : 'active'}`}></div>\r\n              <p>{State === 'P' ? 'Pendiente' : 'Realizada'}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Form method='PUT'>\r\n        <input type=\"hidden\" name='DateID' value={DateID}/>\r\n        <input type=\"hidden\" name='State' value={State}/>\r\n\r\n        <input\r\n          type=\"submit\"\r\n          value={`Marcar como ${State === 'P' ? 'realizada' : 'pendiente'}`}\r\n          className='button center'\r\n        />\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n", "import { authenticator } from \"../auth/auth.server\";\n\nimport Logo from '../components/logo';\n\nimport Styles from '../styles/nosotros.css';\n\nexport function links() {\n  return [\n  {\n    rel: 'stylesheet',\n    href: Styles\n  }];\n\n}\n\nexport async function loader({ request }: any) {\n  await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/login\"\n  });\n\n  return {\n\n  };\n}\n\nexport default function Nosotros() {\n  return (\n    <div className=\"container about-us\">\r\n      <Logo />\r\n\r\n      <div className='information'>\r\n        <h1 className='heading'>Descubre mas sobre nosotros</h1>\r\n        <h3 className='subheading'>\u00BFQuienes somos?</h3>\r\n\r\n        <p>\r\n          Bienvenido a Grupo Sosa Morales, un distinguido despacho de abogados con una s\u00F3lida presencia tanto\r\n          en la ciudad de Tela como en el din\u00E1mico escenario legal de Estados Unidos. En Grupo Sosa Morales,\r\n          nos enorgullece ofrecer servicios legales integrales y personalizados que se adaptan a las necesidades de\r\n          nuestros clientes. Nuestro equipo de abogados altamente calificados combina la experiencia local en la comunidad\r\n          de Tela con un profundo conocimiento de las complejidades legales internacionales, brindando asesoramiento\r\n          experto y soluciones efectivas. Con un compromiso inquebrantable con la excelencia, nos esforzamos por ser\r\n          la primera opci\u00F3n para aquellos que buscan representaci\u00F3n legal confiable, ya sea en asuntos\r\n          locales o transnacionales. En Grupo Sosa Morales, no solo defendemos sus derechos; construimos relaciones\r\n          duraderas basadas en la confianza y la dedicaci\u00F3n a la excelencia jur\u00EDdica.\r\n        </p>\r\n      </div>\r\n\r\n\r\n    </div>);\n\n}", "export default function Logo ({}){\r\n  return (\r\n    <div className='brand'>\r\n      <p className='group-text'>Grupo</p>\r\n      <div className='grafic'></div>\r\n      <div className=\"names\">\r\n        <p className='names-text'>Sosa</p>\r\n        <p className='names-text'>Morales</p>\r\n      </div>\r\n      <div className='grafic'></div>\r\n      <div className=\"subtitle\">\r\n        <p className='subtitle-text'>Notaria</p>\r\n        <p className='subtitle-text'>-</p>\r\n        <p className='subtitle-text'>Abogacia</p>\r\n        <p className='subtitle-text'>-</p>\r\n        <p className='subtitle-text'>Asesoria</p>\r\n        <p className='subtitle-text'>-</p>\r\n        <p className='subtitle-text'>Bienes raices</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n", "import { useEffect } from \"react\";\nimport { Link, useNavigate } from \"@remix-run/react\";\n\nimport Logo from '../components/logo';\n\nimport styles from '../styles/inicio.css';\nimport { authenticator } from \"../auth/auth.server\";\n\nexport const meta = () => {\n  return [\n  { title: \"Inicio\" },\n  { name: \"description\", content: \"Welcome to Remix!\" }];\n\n};\n\nexport function links() {\n  return [\n  {\n    rel: 'stylesheet',\n    href: styles\n  }];\n\n}\n\nexport async function loader({ request }: any) {\n  return await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/login\"\n  });\n}\n\nexport default function Index() {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem('TOKEN');\n    if (!token) {\n      navigate('/login');\n    }\n  }, []);\n\n\n  return (\n    <div className=\"container home\">\r\n      <Logo />\r\n\r\n      <div className=\"panels\">\r\n        <Link to=\"/clientes\" className=\"panel\">\r\n          <img src=\"/img/users-group.svg\" alt=\"user-group\" />\r\n          <h4>Clientes</h4>\r\n          <p>Gestiona tus clientes desde aqui.</p>\r\n        </Link>\r\n\r\n        <Link to=\"/citas\" className=\"panel\">\r\n          <img src=\"/img/calendar-event.svg\" alt=\"calendar\" />\r\n          <h4>Citas</h4>\r\n          <p>Gestiona todas tus citas desde aqui.</p>\r\n        </Link>\r\n\r\n        <Link to=\"/materias\" className=\"panel\">\r\n          <img src=\"/img/category.svg\" alt=\"category\" />\r\n          <h4>Materias</h4>\r\n          <p>Busca documentos de clientes seg\u00FAn las materias disponibles</p>\r\n        </Link>\r\n\r\n        <Link to=\"/documentacioninterna\" className=\"panel\">\r\n          <img src=\"/img/file-description.svg\" alt=\"category-2\" />\r\n          <h4>Documentaci\u00F3n interna</h4>\r\n          <p>Gestiona tu documentaci\u00F3n interna</p>\r\n        </Link>\r\n\r\n        <Link to=\"/nosotros\" className=\"panel\">\r\n          <img src=\"/img/info-octagon.svg\" alt=\"info\" />\r\n          <h4>A cerca de</h4>\r\n          <p>Conoce mas sobre el software.</p>\r\n        </Link>\r\n      </div>\r\n    </div>);\n\n}", "import { useState } from \"react\";\r\nimport {Form, Link, useLoaderData, useNavigation} from '@remix-run/react'\r\nimport { authenticator } from \"../auth/auth.server\";\r\n\r\nimport Input from '../components/input.jsx'\r\nimport Spinner from \"../components/spinner\";\r\nimport {getSession} from \"../auth/session.server\";\r\nimport {json} from \"@remix-run/node\";\r\n\r\nexport async function loader({ request }: any){\r\n  await authenticator.isAuthenticated( request, {\r\n    successRedirect: '/',\r\n  })\r\n\r\n  const session = await getSession(request.headers.get(\"cookie\"));\r\n  const error = session.get(authenticator.sessionErrorKey);\r\n  return json({ error });\r\n}\r\n\r\nexport async function action({ request, context }: any){\r\n  return await authenticator.authenticate(\"user-pass\", request, {\r\n    successRedirect: \"/\",\r\n    failureRedirect: \"/login\",\r\n    throwOnError: true,\r\n    context,\r\n  });\r\n}\r\n\r\nexport default function Login (){\r\n  const navigation = useNavigation();\r\n  const loader: any = useLoaderData();\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('')\r\n\r\n  return (\r\n    <main className='login-modal'>\r\n      <Form className='form' method='POST'>\r\n        <h1 className=\"heading\">\r\n          Iniciar sesi\u00F3n\r\n        </h1>\r\n        <h2 className=\"subheading\">\r\n          Llena todos los campos para iniciar sesi\u00F3n\r\n        </h2>\r\n        <br/>\r\n\r\n        <div className='inputs'>\r\n          <Input\r\n            title='Nombre de usuario o correo electronico'\r\n            name='email'\r\n            placeholder='Tu correo electronico'\r\n            value={email}\r\n            setValue={setEmail}\r\n            error={''}\r\n          />\r\n\r\n          <Input\r\n            title='Contrase\u00F1a'\r\n            name='password'\r\n            placeholder='Tu contrase\u00F1a'\r\n            type='password'\r\n            value={password}\r\n            setValue={setPassword}\r\n            error={''}\r\n          />\r\n\r\n          <div className='account-options'>\r\n            <Link to='/create-account' className='option'>\u00BFNo tienes una cuenta? Crea una</Link>\r\n            <Link to='/forgot-password' className='option'>\u00BFOlvidaste tu contrase\u00F1a? Recuperala</Link>\r\n          </div>\r\n\r\n          <p className='error'>{ loader?.error?.message }</p>\r\n\r\n          <div className='loading'>\r\n            <input className=\"button\" type=\"submit\" value='Iniciar Sesi\u00F3n'/>\r\n            { navigation?.state !== 'idle' &&\r\n              <Spinner/>\r\n            }\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    </main>\r\n  )\r\n}\r\n", "export default {'entry':{'module':'/build/entry.client-QHANBB4V.js','imports':['/build/_shared/chunk-OAPPX4FA.js','/build/_shared/chunk-U3RL2HL2.js','/build/_shared/chunk-WEAPBHQG.js','/build/_shared/chunk-CDMYZBNR.js','/build/_shared/chunk-JR22VO6P.js','/build/_shared/chunk-7PHB3BFD.js','/build/_shared/chunk-CJ4MY3PQ.js','/build/_shared/chunk-PZDJHGND.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-3J563NR2.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':true},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-CHBNYIOI.js','imports':['/build/_shared/chunk-RTZHPADD.js','/build/_shared/chunk-56TZOM4G.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/citas._index':{'id':'routes/citas._index','parentId':'root','path':'citas','index':true,'caseSensitive':undefined,'module':'/build/routes/citas._index-5PSZC7NE.js','imports':['/build/_shared/chunk-XSG5LB2M.js','/build/_shared/chunk-LA3NFKUD.js','/build/_shared/chunk-A2ZPQFUT.js','/build/_shared/chunk-64C6VHP4.js','/build/_shared/chunk-56TZOM4G.js','/build/_shared/chunk-FFP3OEOV.js','/build/_shared/chunk-OUOOIR2A.js','/build/_shared/chunk-7LZIAPLR.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/clientes.$URL':{'id':'routes/clientes.$URL','parentId':'root','path':'clientes/:URL','index':undefined,'caseSensitive':undefined,'module':'/build/routes/clientes.$URL-3XCSCLFM.js','imports':['/build/_shared/chunk-7Y6NOFT7.js','/build/_shared/chunk-T56LUI4W.js','/build/_shared/chunk-XSG5LB2M.js','/build/_shared/chunk-RSIVJDSZ.js','/build/_shared/chunk-HIJLEMAH.js','/build/_shared/chunk-64C6VHP4.js','/build/_shared/chunk-56TZOM4G.js','/build/_shared/chunk-7LZIAPLR.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/clientes._index':{'id':'routes/clientes._index','parentId':'root','path':'clientes','index':true,'caseSensitive':undefined,'module':'/build/routes/clientes._index-3FIVE3PL.js','imports':['/build/_shared/chunk-T56LUI4W.js','/build/_shared/chunk-XSG5LB2M.js','/build/_shared/chunk-HIJLEMAH.js','/build/_shared/chunk-64C6VHP4.js','/build/_shared/chunk-56TZOM4G.js','/build/_shared/chunk-FFP3OEOV.js','/build/_shared/chunk-7LZIAPLR.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/create-account':{'id':'routes/create-account','parentId':'root','path':'create-account','index':undefined,'caseSensitive':undefined,'module':'/build/routes/create-account-S2644V5L.js','imports':['/build/_shared/chunk-FFP3OEOV.js','/build/_shared/chunk-OUOOIR2A.js','/build/_shared/chunk-7LZIAPLR.js'],'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/documentacioninterna':{'id':'routes/documentacioninterna','parentId':'root','path':'documentacioninterna','index':undefined,'caseSensitive':undefined,'module':'/build/routes/documentacioninterna-DUZIIAEH.js','imports':['/build/_shared/chunk-7Y6NOFT7.js','/build/_shared/chunk-64C6VHP4.js','/build/_shared/chunk-56TZOM4G.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/forgot-password':{'id':'routes/forgot-password','parentId':'root','path':'forgot-password','index':undefined,'caseSensitive':undefined,'module':'/build/routes/forgot-password-GWMCW5TM.js','imports':['/build/_shared/chunk-A2ZPQFUT.js','/build/_shared/chunk-FFP3OEOV.js','/build/_shared/chunk-OUOOIR2A.js','/build/_shared/chunk-7LZIAPLR.js'],'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-YIP32EID.js','imports':['/build/_shared/chunk-56TZOM4G.js','/build/_shared/chunk-FFP3OEOV.js','/build/_shared/chunk-7LZIAPLR.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/materias.$name':{'id':'routes/materias.$name','parentId':'root','path':'materias/:name','index':undefined,'caseSensitive':undefined,'module':'/build/routes/materias.$name-Y5J6EG2M.js','imports':['/build/_shared/chunk-7Y6NOFT7.js','/build/_shared/chunk-T56LUI4W.js','/build/_shared/chunk-RSIVJDSZ.js','/build/_shared/chunk-HIJLEMAH.js','/build/_shared/chunk-A2ZPQFUT.js','/build/_shared/chunk-64C6VHP4.js','/build/_shared/chunk-56TZOM4G.js','/build/_shared/chunk-7LZIAPLR.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/materias._index':{'id':'routes/materias._index','parentId':'root','path':'materias','index':true,'caseSensitive':undefined,'module':'/build/routes/materias._index-BBCUJSOL.js','imports':['/build/_shared/chunk-RSIVJDSZ.js','/build/_shared/chunk-HIJLEMAH.js','/build/_shared/chunk-64C6VHP4.js','/build/_shared/chunk-56TZOM4G.js','/build/_shared/chunk-7LZIAPLR.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/nosotros':{'id':'routes/nosotros','parentId':'root','path':'nosotros','index':undefined,'caseSensitive':undefined,'module':'/build/routes/nosotros-P52KMY4D.js','imports':['/build/_shared/chunk-RTZHPADD.js','/build/_shared/chunk-56TZOM4G.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/usuarios.$URL':{'id':'routes/usuarios.$URL','parentId':'root','path':'usuarios/:URL','index':undefined,'caseSensitive':undefined,'module':'/build/routes/usuarios.$URL-BQIW4GXR.js','imports':['/build/_shared/chunk-7Y6NOFT7.js','/build/_shared/chunk-XSG5LB2M.js','/build/_shared/chunk-HIJLEMAH.js','/build/_shared/chunk-OUOOIR2A.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/usuarios._index':{'id':'routes/usuarios._index','parentId':'root','path':'usuarios','index':true,'caseSensitive':undefined,'module':'/build/routes/usuarios._index-WH37FHAD.js','imports':['/build/_shared/chunk-LA3NFKUD.js','/build/_shared/chunk-A2ZPQFUT.js','/build/_shared/chunk-64C6VHP4.js','/build/_shared/chunk-56TZOM4G.js','/build/_shared/chunk-OUOOIR2A.js','/build/_shared/chunk-7LZIAPLR.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'9acf7fec','hmr':{'runtime':'/build/_shared\\\\chunk-CDMYZBNR.js','timestamp':1703405454797},'url':'/build/manifest-9ACF7FEC.js'};", "\nimport * as entryServer from \"C:\\\\Users\\\\Dell\\\\Documents\\\\GitHub\\\\Buffete\\\\buffete-client\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/documentacioninterna.tsx\";\nimport * as route2 from \"./routes/clientes._index.tsx\";\nimport * as route3 from \"./routes/forgot-password.tsx\";\nimport * as route4 from \"./routes/materias._index.tsx\";\nimport * as route5 from \"./routes/usuarios._index.tsx\";\nimport * as route6 from \"./routes/create-account.tsx\";\nimport * as route7 from \"./routes/materias.$name.tsx\";\nimport * as route8 from \"./routes/clientes.$URL.tsx\";\nimport * as route9 from \"./routes/usuarios.$URL.tsx\";\nimport * as route10 from \"./routes/citas._index.tsx\";\nimport * as route11 from \"./routes/nosotros.tsx\";\nimport * as route12 from \"./routes/_index.tsx\";\nimport * as route13 from \"./routes/login.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/documentacioninterna\": {\n      id: \"routes/documentacioninterna\",\n      parentId: \"root\",\n      path: \"documentacioninterna\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/clientes._index\": {\n      id: \"routes/clientes._index\",\n      parentId: \"root\",\n      path: \"clientes\",\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/forgot-password\": {\n      id: \"routes/forgot-password\",\n      parentId: \"root\",\n      path: \"forgot-password\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/materias._index\": {\n      id: \"routes/materias._index\",\n      parentId: \"root\",\n      path: \"materias\",\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/usuarios._index\": {\n      id: \"routes/usuarios._index\",\n      parentId: \"root\",\n      path: \"usuarios\",\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/create-account\": {\n      id: \"routes/create-account\",\n      parentId: \"root\",\n      path: \"create-account\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/materias.$name\": {\n      id: \"routes/materias.$name\",\n      parentId: \"root\",\n      path: \"materias/:name\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/clientes.$URL\": {\n      id: \"routes/clientes.$URL\",\n      parentId: \"root\",\n      path: \"clientes/:URL\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/usuarios.$URL\": {\n      id: \"routes/usuarios.$URL\",\n      parentId: \"root\",\n      path: \"usuarios/:URL\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/citas._index\": {\n      id: \"routes/citas._index\",\n      parentId: \"root\",\n      path: \"citas\",\n      index: true,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/nosotros\": {\n      id: \"routes/nosotros\",\n      parentId: \"root\",\n      path: \"nosotros\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    }\n  };"],
  "mappings": "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",
  "names": ["jsxDEV", "useLocation", "jsxDEV", "loader", "useLocation", "action", "loader", "useState", "useLoaderData", "Form", "jsxDEV", "Fragment", "jsxDEV", "Form", "useState", "Link", "useOutletContext", "Document", "useState", "jsxDEV", "numPages", "Fragment", "jsxDEV", "InternalDocument", "useState", "useOutletContext", "Link", "Form", "jsxDEV", "jsxDEV", "loader", "action", "useState", "useLoaderData", "action", "links", "loader", "useEffect", "useState", "useActionData", "useLoaderData", "useState", "Form", "useNavigation", "jsxDEV", "jsxDEV", "jsxDEV", "useNavigation", "useState", "Form", "Link", "jsxDEV", "jsxDEV", "links", "loader", "action", "client", "useState", "useLoaderData", "useActionData", "useEffect", "action", "useState", "useEffect", "Form", "useActionData", "accessLevel", "Link", "useActionData", "useNavigation", "Fragment", "jsxDEV", "action", "useActionData", "useNavigation", "Link", "useActionData", "useNavigation", "Fragment", "jsxDEV", "action", "useActionData", "useNavigation", "useActionData", "useNavigation", "Fragment", "jsxDEV", "action", "useActionData", "useNavigation", "jsxDEV", "action", "user", "useActionData", "useState", "useEffect", "Form", "action", "links", "loader", "useState", "useEffect", "useActionData", "useLoaderData", "useState", "Form", "useNavigation", "jsxDEV", "Link", "jsxDEV", "jsxDEV", "links", "loader", "action", "subject", "useState", "useLoaderData", "useActionData", "useEffect", "action", "loader", "useState", "useEffect", "useActionData", "useLoaderData", "Link", "jsxDEV", "useState", "Fragment", "jsxDEV", "jsxDEV", "useState", "useState", "useEffect", "Form", "useNavigation", "jsxDEV", "useNavigation", "useState", "generateRandomCode", "code", "useEffect", "Form", "jsxDEV", "loader", "action", "useState", "useLoaderData", "useActionData", "useEffect", "action", "useEffect", "useState", "useActionData", "useNavigate", "React", "Link", "Form", "useNavigation", "useActionData", "jsxDEV", "EnterCode", "action", "useActionData", "useNavigation", "React", "Form", "Link", "Form", "useActionData", "useNavigation", "jsxDEV", "EnterEmail", "action", "useActionData", "useNavigation", "Form", "Form", "useNavigation", "useActionData", "jsxDEV", "action", "useActionData", "useNavigation", "Form", "jsxDEV", "action", "user", "error", "useNavigate", "useActionData", "useState", "useEffect", "EnterCode", "EnterEmail", "action", "links", "loader", "useState", "useEffect", "useActionData", "useLoaderData", "useState", "Link", "useOutletContext", "Fragment", "jsxDEV", "Document", "useState", "useOutletContext", "Link", "jsxDEV", "links", "loader", "action", "useLoaderData", "useActionData", "useState", "useEffect", "Document", "action", "links", "loader", "useEffect", "useState", "useActionData", "useLoaderData", "useState", "Link", "useOutletContext", "jsxDEV", "useState", "jsxDEV", "Form", "useNavigation", "Fragment", "jsxDEV", "useNavigation", "Form", "jsxDEV", "links", "loader", "action", "useLoaderData", "useActionData", "useState", "useEffect", "links", "loader", "useState", "useLoaderData", "Link", "Fragment", "jsxDEV", "Link", "jsxDEV", "jsxDEV", "links", "loader", "useState", "useLoaderData", "action", "links", "loader", "useEffect", "useState", "useActionData", "useLoaderData", "useState", "Form", "useNavigation", "jsxDEV", "useState", "useNavigation", "Form", "Form", "jsxDEV", "Date", "User", "Client", "Form", "Fragment", "jsxDEV", "links", "loader", "action", "useActionData", "useLoaderData", "useState", "useEffect", "Date", "links", "loader", "jsxDEV", "jsxDEV", "links", "loader", "links", "loader", "meta", "useEffect", "Link", "useNavigate", "jsxDEV", "meta", "links", "loader", "useNavigate", "useEffect", "Link", "action", "loader", "useState", "Form", "Link", "useLoaderData", "useNavigation", "jsxDEV", "loader", "action", "useNavigation", "useLoaderData", "useState", "Form", "Link"]
}
